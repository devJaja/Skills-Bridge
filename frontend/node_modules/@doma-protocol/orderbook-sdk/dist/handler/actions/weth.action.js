export const createWrapperCurrencyDepositTransaction = (signer, wrapperCurrencyContract, value) => {
    const getConnectedContract = async () => wrapperCurrencyContract.connect(await signer);
    return {
        transact: async (overrides) => {
            const mergedOverrides = { ...overrides, value };
            const contract = await getConnectedContract();
            return contract.deposit(mergedOverrides);
        },
        staticCall: async (overrides) => {
            const mergedOverrides = { ...overrides, value };
            const contract = await getConnectedContract();
            return contract.deposit.staticCall(mergedOverrides);
        },
        estimateGas: async (overrides) => {
            const mergedOverrides = { ...overrides, value };
            const contract = await getConnectedContract();
            return contract.deposit.estimateGas(mergedOverrides);
        },
        buildTransaction: async (overrides) => {
            const mergedOverrides = { ...overrides, value };
            const contract = await getConnectedContract();
            return contract.deposit.populateTransaction(mergedOverrides);
        },
    };
};
