export declare enum DomaOrderbookErrorCode {
    INVALID_PARAMETERS = "INVALID_PARAMETERS",
    SIGNER_NOT_PROVIDED = "SIGNER_NOT_PROVIDED",
    BLOCKCHAIN_ERROR = "BLOCKCHAIN_ERROR",
    API_ERROR = "API_ERROR",
    UNKNOWN_ERROR = "UNKNOWN_ERROR",
    SEAPORT_APPROVAL_FAILED = "SEAPORT_APPROVAL_FAILED",
    SEAPORT_SIGNATURE_FAILED = "SEAPORT_SIGNATURE_FAILED",
    SEAPORT_TRANSACTION_FAILED = "SEAPORT_TRANSACTION_FAILED",
    LISTING_CREATION_FAILED = "LISTING_CREATION_FAILED",
    LISTING_VALIDATION_FAILED = "LISTING_VALIDATION_FAILED",
    BUY_LISTING_FAILED = "BUY_LISTING_FAILED",
    LISTING_CANCELLATION_FAILED = "LISTING_CANCELLATION_FAILED",
    OFFER_CREATION_FAILED = "OFFER_CREATION_FAILED",
    OFFER_VALIDATION_FAILED = "OFFER_VALIDATION_FAILED",
    ACCEPT_OFFER_FAILED = "ACCEPT_OFFER_FAILED",
    OFFER_CANCELLATION_FAILED = "OFFER_CANCELLATION_FAILED",
    ORDER_NOT_FOUND = "ORDER_NOT_FOUND",
    OFFCHAIN_CANCEL_ORDER_FAILED = "OFFCHAIN_CANCEL_ORDER_FAILED",
    TOKEN_CONVERSION_FAILED = "TOKEN_CONVERSION_FAILED",
    INSUFFICIENT_NATIVE_BALANCE = "INSUFFICIENT_NATIVE_BALANCE",
    INSUFFICIENT_BALANCE = "INSUFFICIENT_BALANCE",
    CURRENCY_NOT_SUPPORTED = "CURRENCY_NOT_SUPPORTED",
    CURRENCY_NOT_SAME = "CURRENCY_NOT_SAME",
    FETCH_FEES_FAILED = "FETCH_FEES_FAILED",
    CLIENT_NOT_INITIALIZED = "CLIENT_NOT_INITIALIZED",
    INITIALIZATION_ERROR = "INITIALIZATION_ERROR"
}
export declare class DomaOrderbookError extends Error {
    readonly code: DomaOrderbookErrorCode;
    readonly details?: unknown | undefined;
    readonly context?: Record<string, unknown> | undefined;
    readonly timestamp: number;
    constructor(code: DomaOrderbookErrorCode, message: string, details?: unknown | undefined, context?: Record<string, unknown> | undefined);
    static fromError(error: unknown, defaultCode?: DomaOrderbookErrorCode, context?: Record<string, unknown>): DomaOrderbookError;
    toJSON(): Record<string, unknown>;
}
//# sourceMappingURL=errors.d.ts.map