export var DomaOrderbookErrorCode;
(function (DomaOrderbookErrorCode) {
    // Generic errors
    DomaOrderbookErrorCode["INVALID_PARAMETERS"] = "INVALID_PARAMETERS";
    DomaOrderbookErrorCode["SIGNER_NOT_PROVIDED"] = "SIGNER_NOT_PROVIDED";
    DomaOrderbookErrorCode["BLOCKCHAIN_ERROR"] = "BLOCKCHAIN_ERROR";
    DomaOrderbookErrorCode["API_ERROR"] = "API_ERROR";
    DomaOrderbookErrorCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
    // Seaport specific
    DomaOrderbookErrorCode["SEAPORT_APPROVAL_FAILED"] = "SEAPORT_APPROVAL_FAILED";
    DomaOrderbookErrorCode["SEAPORT_SIGNATURE_FAILED"] = "SEAPORT_SIGNATURE_FAILED";
    DomaOrderbookErrorCode["SEAPORT_TRANSACTION_FAILED"] = "SEAPORT_TRANSACTION_FAILED";
    // Listing specific
    DomaOrderbookErrorCode["LISTING_CREATION_FAILED"] = "LISTING_CREATION_FAILED";
    DomaOrderbookErrorCode["LISTING_VALIDATION_FAILED"] = "LISTING_VALIDATION_FAILED";
    DomaOrderbookErrorCode["BUY_LISTING_FAILED"] = "BUY_LISTING_FAILED";
    DomaOrderbookErrorCode["LISTING_CANCELLATION_FAILED"] = "LISTING_CANCELLATION_FAILED";
    // Offer specific
    DomaOrderbookErrorCode["OFFER_CREATION_FAILED"] = "OFFER_CREATION_FAILED";
    DomaOrderbookErrorCode["OFFER_VALIDATION_FAILED"] = "OFFER_VALIDATION_FAILED";
    DomaOrderbookErrorCode["ACCEPT_OFFER_FAILED"] = "ACCEPT_OFFER_FAILED";
    DomaOrderbookErrorCode["OFFER_CANCELLATION_FAILED"] = "OFFER_CANCELLATION_FAILED";
    // Order specific
    DomaOrderbookErrorCode["ORDER_NOT_FOUND"] = "ORDER_NOT_FOUND";
    DomaOrderbookErrorCode["OFFCHAIN_CANCEL_ORDER_FAILED"] = "OFFCHAIN_CANCEL_ORDER_FAILED";
    // Token specific
    DomaOrderbookErrorCode["TOKEN_CONVERSION_FAILED"] = "TOKEN_CONVERSION_FAILED";
    DomaOrderbookErrorCode["INSUFFICIENT_NATIVE_BALANCE"] = "INSUFFICIENT_NATIVE_BALANCE";
    DomaOrderbookErrorCode["INSUFFICIENT_BALANCE"] = "INSUFFICIENT_BALANCE";
    DomaOrderbookErrorCode["CURRENCY_NOT_SUPPORTED"] = "CURRENCY_NOT_SUPPORTED";
    DomaOrderbookErrorCode["CURRENCY_NOT_SAME"] = "CURRENCY_NOT_SAME";
    // Fees
    DomaOrderbookErrorCode["FETCH_FEES_FAILED"] = "FETCH_FEES_FAILED";
    // SDK specific
    DomaOrderbookErrorCode["CLIENT_NOT_INITIALIZED"] = "CLIENT_NOT_INITIALIZED";
    DomaOrderbookErrorCode["INITIALIZATION_ERROR"] = "INITIALIZATION_ERROR";
})(DomaOrderbookErrorCode || (DomaOrderbookErrorCode = {}));
export class DomaOrderbookError extends Error {
    constructor(code, message, details, context) {
        super(message);
        this.code = code;
        this.details = details;
        this.context = context;
        this.name = 'DomaOrderbookError';
        this.timestamp = Date.now();
    }
    static fromError(error, defaultCode = DomaOrderbookErrorCode.UNKNOWN_ERROR, context) {
        if (error instanceof DomaOrderbookError) {
            return error;
        }
        const message = error instanceof Error ? error.message : 'Unknown error occurred';
        return new DomaOrderbookError(defaultCode, message, error, context);
    }
    toJSON() {
        return {
            code: this.code,
            message: this.message,
            details: this.details,
            context: this.context,
            timestamp: this.timestamp,
        };
    }
}
