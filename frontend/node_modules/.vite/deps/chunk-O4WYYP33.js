import {
  property
} from "./chunk-WQRXRS4Z.js";
import {
  colorStyles,
  customElement,
  elementStyles,
  resetStyles
} from "./chunk-WJUHZOS4.js";
import {
  LitElement,
  css,
  html
} from "./chunk-7LMDMJQJ.js";

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-icon-link/styles.js
var styles_default = css`
  button {
    border-radius: var(--local-border-radius);
    color: var(--wui-color-fg-100);
    padding: var(--local-padding);
  }

  @media (max-width: 700px) {
    :host(:not([size='sm'])) button {
      padding: var(--wui-spacing-s);
    }
  }

  button > wui-icon {
    pointer-events: none;
  }

  button:disabled > wui-icon {
    color: var(--wui-color-bg-300) !important;
  }

  button:disabled {
    background-color: transparent;
  }

  button:hover:not(:disabled) {
    background-color: var(--wui-color-accent-glass-015);
  }

  button:focus-visible:not(:disabled) {
    background-color: var(--wui-color-accent-glass-015);
    box-shadow:
      inset 0 0 0 1px var(--wui-color-accent-100),
      0 0 0 4px var(--wui-color-accent-glass-020);
  }
`;

// node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-icon-link/index.js
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var WuiIconLink = class WuiIconLink2 extends LitElement {
  constructor() {
    super(...arguments);
    this.size = "md";
    this.disabled = false;
    this.icon = "copy";
    this.iconColor = "inherit";
  }
  render() {
    this.dataset["size"] = this.size;
    let borderRadius = "";
    let padding = "";
    switch (this.size) {
      case "lg":
        borderRadius = "--wui-border-radius-xs";
        padding = "--wui-spacing-1xs";
        break;
      case "sm":
        borderRadius = "--wui-border-radius-3xs";
        padding = "--wui-spacing-xxs";
        break;
      default:
        borderRadius = "--wui-border-radius-xxs";
        padding = "--wui-spacing-2xs";
        break;
    }
    this.style.cssText = `
    --local-border-radius: var(${borderRadius});
    --local-padding: var(${padding});
    `;
    return html`
      <button ?disabled=${this.disabled}>
        <wui-icon color=${this.iconColor} size=${this.size} name=${this.icon}></wui-icon>
      </button>
    `;
  }
};
WuiIconLink.styles = [resetStyles, elementStyles, colorStyles, styles_default];
__decorate([
  property()
], WuiIconLink.prototype, "size", void 0);
__decorate([
  property({ type: Boolean })
], WuiIconLink.prototype, "disabled", void 0);
__decorate([
  property()
], WuiIconLink.prototype, "icon", void 0);
__decorate([
  property()
], WuiIconLink.prototype, "iconColor", void 0);
WuiIconLink = __decorate([
  customElement("wui-icon-link")
], WuiIconLink);
//# sourceMappingURL=chunk-O4WYYP33.js.map
