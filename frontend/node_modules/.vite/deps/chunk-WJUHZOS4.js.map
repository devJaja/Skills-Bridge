{
  "version": 3,
  "sources": ["../../blakejs/util.js", "../../blakejs/blake2b.js", "../../blakejs/blake2s.js", "../../blakejs/index.js", "../../@reown/appkit-controllers/src/utils/ConstantsUtil.ts", "../../@reown/appkit-controllers/src/utils/StorageUtil.ts", "../../@reown/appkit-controllers/src/utils/CoreHelperUtil.ts", "../../@reown/appkit-controllers/src/utils/FetchUtil.ts", "../../valtio/esm/vanilla/utils.mjs", "../../@reown/appkit-controllers/src/utils/OptionsUtil.ts", "../../@reown/appkit-controllers/src/controllers/OptionsController.ts", "../../@reown/appkit-controllers/src/controllers/TelemetryController.ts", "../../@reown/appkit-controllers/src/utils/withErrorBoundary.ts", "../../@reown/appkit-wallet/src/W3mFrameConstants.ts", "../../@reown/appkit-controllers/src/utils/MobileWallet.ts", "../../@reown/appkit-controllers/src/controllers/AssetController.ts", "../../@reown/appkit-controllers/src/utils/AssetUtil.ts", "../../@reown/appkit-controllers/src/controllers/AlertController.ts", "../../@reown/appkit-controllers/src/controllers/EventsController.ts", "../../@reown/appkit-controllers/src/controllers/ApiController.ts", "../../@reown/appkit-controllers/src/utils/NetworkUtil.ts", "../../@reown/appkit-controllers/src/controllers/PublicStateController.ts", "../../@reown/appkit-controllers/src/controllers/ModalController.ts", "../../@reown/appkit-controllers/src/controllers/RouterController.ts", "../../@reown/appkit-controllers/src/controllers/ThemeController.ts", "../../@reown/appkit-controllers/src/controllers/ConnectorController.ts", "../../@reown/appkit-controllers/src/utils/ConnectorControllerUtil.ts", "../../@reown/appkit-controllers/src/utils/ChainControllerUtil.ts", "../../@reown/appkit-controllers/src/utils/ConnectionControllerUtil.ts", "../../@reown/appkit-controllers/src/controllers/SnackController.ts", "../../@reown/appkit-controllers/src/controllers/TransactionsController.ts", "../../@reown/appkit-controllers/src/controllers/ConnectionController.ts", "../../@reown/appkit-controllers/src/utils/SwapApiUtil.ts", "../../@reown/appkit-controllers/src/controllers/SendController.ts", "../../@reown/appkit-controllers/src/controllers/ChainController.ts", "../../@reown/appkit-controllers/src/controllers/BlockchainApiController.ts", "../../@reown/appkit-controllers/src/utils/ERC7811Util.ts", "../../@reown/appkit-controllers/src/utils/BalanceUtil.ts", "../../@reown/appkit-controllers/src/controllers/AccountController.ts", "../../@reown/appkit-controllers/src/controllers/OnRampController.ts", "../../@reown/appkit-controllers/src/utils/SwapCalculationUtil.ts", "../../@reown/appkit-controllers/src/controllers/SwapController.ts", "../../@reown/appkit-controllers/src/controllers/TooltipController.ts", "../../@reown/appkit-controllers/src/utils/EnsUtil.ts", "../../@reown/appkit-controllers/src/controllers/EnsController.ts", "../../@reown/appkit-controllers/src/controllers/OptionsStateController.ts", "../../@walletconnect/universal-provider/node_modules/viem/accounts/utils/publicKeyToAddress.ts", "../../@walletconnect/universal-provider/node_modules/viem/utils/signature/recoverPublicKey.ts", "../../@walletconnect/universal-provider/node_modules/viem/utils/signature/recoverAddress.ts", "../../@walletconnect/universal-provider/node_modules/viem/utils/formatters/transaction.ts", "../../@walletconnect/universal-provider/node_modules/viem/utils/formatters/block.ts", "../../@walletconnect/universal-provider/node_modules/viem/actions/public/getTransactionCount.ts", "../../@walletconnect/universal-provider/node_modules/viem/constants/blob.ts", "../../@walletconnect/universal-provider/node_modules/viem/utils/formatters/log.ts", "../../@walletconnect/universal-provider/node_modules/viem/actions/wallet/sendTransaction.ts", "../../@walletconnect/universal-provider/node_modules/viem/utils/formatters/transactionReceipt.ts", "../../@walletconnect/universal-provider/node_modules/viem/actions/wallet/sendCalls.ts", "../../@walletconnect/universal-provider/node_modules/viem/utils/promise/withDedupe.ts", "../../@walletconnect/universal-provider/node_modules/viem/utils/rpc/id.ts", "../../@walletconnect/universal-provider/node_modules/@noble/hashes/src/legacy.ts", "../../@walletconnect/universal-provider/node_modules/viem/utils/nonceManager.ts", "../../@walletconnect/universal-provider/node_modules/ox/core/Hash.ts", "../../@walletconnect/universal-provider/node_modules/ox/core/internal/lru.ts", "../../@walletconnect/universal-provider/node_modules/ox/core/Caches.ts", "../../@walletconnect/universal-provider/node_modules/ox/core/Address.ts", "../../@walletconnect/universal-provider/node_modules/ox/core/Solidity.ts", "../../@walletconnect/universal-provider/node_modules/ox/core/internal/cursor.ts", "../../@walletconnect/universal-provider/node_modules/ox/core/AbiParameters.ts", "../../@msgpack/msgpack/src/utils/utf8.ts", "../../@msgpack/msgpack/src/ExtData.ts", "../../@msgpack/msgpack/src/DecodeError.ts", "../../@msgpack/msgpack/src/utils/int.ts", "../../@msgpack/msgpack/src/timestamp.ts", "../../@msgpack/msgpack/src/ExtensionCodec.ts", "../../@msgpack/msgpack/src/utils/typedArrays.ts", "../../@msgpack/msgpack/src/Encoder.ts", "../../@msgpack/msgpack/src/encode.ts", "../../@msgpack/msgpack/src/utils/prettyByte.ts", "../../@msgpack/msgpack/src/CachedKeyDecoder.ts", "../../@msgpack/msgpack/src/Decoder.ts", "../../@msgpack/msgpack/src/decode.ts", "../../@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/as-uint8array.js", "../../@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/alloc.js", "../../@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/concat.js", "../../@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/util/bases.js", "../../@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/from-string.js", "../../@walletconnect/universal-provider/node_modules/uint8arrays/esm/src/to-string.js", "../../@reown/appkit-controllers/src/utils/SIWXUtil.ts", "../../@reown/appkit-controllers/src/utils/ModalUtil.ts", "../../@reown/appkit-ui/src/utils/MathUtil.ts", "../../@reown/appkit-ui/src/utils/ThemeUtil.ts", "../../@reown/appkit-ui/src/utils/UiHelperUtil.ts", "../../@reown/appkit-ui/src/utils/WebComponentsUtil.ts", "../../@reown/appkit-ui/src/utils/TransactionUtil.ts"],
  "sourcesContent": ["const ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  let ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (typeof input === 'string') {\n    const encoder = new TextEncoder()\n    ret = encoder.encode(input)\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map\n    .call(bytes, function (n) {\n      return (n < 16 ? '0' : '') + n.toString(16)\n    })\n    .join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  let msg = '\\n' + label + ' = '\n  for (let i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  let startMs = new Date().getTime()\n\n  const input = new Uint8Array(N)\n  for (let i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  const genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (let i = 0; i < M; i++) {\n    const hashHex = hashFn(input)\n    const hashMs = new Date().getTime()\n    const ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(\n      Math.round((N / (1 << 20) / (ms / 1000)) * 100) / 100 + ' MB PER SECOND'\n    )\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n", "// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  const o0 = v[a] + v[b]\n  let o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  let o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  let o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return arr[i] ^ (arr[i + 1] << 8) ^ (arr[i + 2] << 16) ^ (arr[i + 3] << 24)\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  const x0 = m[ix]\n  const x1 = m[ix + 1]\n  const y0 = m[iy]\n  const y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  let xor0 = v[d] ^ v[a]\n  let xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nconst BLAKE2B_IV32 = new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372,\n  0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,\n  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n])\n\nconst SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13,\n  6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1,\n  9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4,\n  10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5,\n  15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7,\n  14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2,\n  13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0,\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6,\n  1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nconst SIGMA82 = new Uint8Array(\n  SIGMA8.map(function (x) {\n    return x * 2\n  })\n)\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nconst v = new Uint32Array(32)\nconst m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  let i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// reusable parameterBlock\nconst parameterBlock = new Uint8Array([\n  0,\n  0,\n  0,\n  0, //  0: outlen, keylen, fanout, depth\n  0,\n  0,\n  0,\n  0, //  4: leaf length, sequential mode\n  0,\n  0,\n  0,\n  0, //  8: node offset\n  0,\n  0,\n  0,\n  0, // 12: node offset\n  0,\n  0,\n  0,\n  0, // 16: node depth, inner length, rfu\n  0,\n  0,\n  0,\n  0, // 20: rfu\n  0,\n  0,\n  0,\n  0, // 24: rfu\n  0,\n  0,\n  0,\n  0, // 28: rfu\n  0,\n  0,\n  0,\n  0, // 32: salt\n  0,\n  0,\n  0,\n  0, // 36: salt\n  0,\n  0,\n  0,\n  0, // 40: salt\n  0,\n  0,\n  0,\n  0, // 44: salt\n  0,\n  0,\n  0,\n  0, // 48: personal\n  0,\n  0,\n  0,\n  0, // 52: personal\n  0,\n  0,\n  0,\n  0, // 56: personal\n  0,\n  0,\n  0,\n  0 // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\n// Takes an optinal Uint8Array salt\n// Takes an optinal Uint8Array personal\nfunction blake2bInit (outlen, key, salt, personal) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n  if (salt && salt.length !== 16) {\n    throw new Error('Illegal salt, expected Uint8Array with length is 16')\n  }\n  if (personal && personal.length !== 16) {\n    throw new Error('Illegal personal, expected Uint8Array with length is 16')\n  }\n\n  // state, 'param block'\n  const ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize parameterBlock before usage\n  parameterBlock.fill(0)\n  parameterBlock[0] = outlen\n  if (key) parameterBlock[1] = key.length\n  parameterBlock[2] = 1 // fanout\n  parameterBlock[3] = 1 // depth\n  if (salt) parameterBlock.set(salt, 32)\n  if (personal) parameterBlock.set(personal, 48)\n\n  // initialize hash state\n  for (let i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 128) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2b (input, key, outlen, salt, personal) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n  if (salt) {\n    salt = util.normalizeInput(salt)\n  }\n  if (personal) {\n    personal = util.normalizeInput(personal)\n  }\n\n  // do the math\n  const ctx = blake2bInit(outlen, key, salt, personal)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2bHex (input, key, outlen, salt, personal) {\n  const output = blake2b(input, key, outlen, salt, personal)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n", "// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nconst BLAKE2S_IV = new Uint32Array([\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n])\n\nconst SIGMA = new Uint8Array([\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  14,\n  10,\n  4,\n  8,\n  9,\n  15,\n  13,\n  6,\n  1,\n  12,\n  0,\n  2,\n  11,\n  7,\n  5,\n  3,\n  11,\n  8,\n  12,\n  0,\n  5,\n  2,\n  15,\n  13,\n  10,\n  14,\n  3,\n  6,\n  7,\n  1,\n  9,\n  4,\n  7,\n  9,\n  3,\n  1,\n  13,\n  12,\n  11,\n  14,\n  2,\n  6,\n  5,\n  10,\n  4,\n  0,\n  15,\n  8,\n  9,\n  0,\n  5,\n  7,\n  2,\n  4,\n  10,\n  15,\n  14,\n  1,\n  11,\n  12,\n  6,\n  8,\n  3,\n  13,\n  2,\n  12,\n  6,\n  10,\n  0,\n  11,\n  8,\n  3,\n  4,\n  13,\n  7,\n  5,\n  15,\n  14,\n  1,\n  9,\n  12,\n  5,\n  1,\n  15,\n  14,\n  13,\n  4,\n  10,\n  0,\n  7,\n  6,\n  3,\n  9,\n  2,\n  8,\n  11,\n  13,\n  11,\n  7,\n  14,\n  12,\n  1,\n  3,\n  9,\n  5,\n  0,\n  15,\n  4,\n  8,\n  6,\n  2,\n  10,\n  6,\n  15,\n  14,\n  9,\n  11,\n  3,\n  0,\n  8,\n  12,\n  2,\n  13,\n  7,\n  1,\n  4,\n  10,\n  5,\n  10,\n  2,\n  8,\n  4,\n  7,\n  6,\n  1,\n  5,\n  15,\n  11,\n  9,\n  14,\n  3,\n  12,\n  13,\n  0\n])\n\n// Compression function. \"last\" flag indicates last block\nconst v = new Uint32Array(16)\nconst m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  let i = 0\n  for (i = 0; i < 8; i++) {\n    // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= ctx.t / 0x100000000 // high 32 bits\n  if (last) {\n    // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) {\n    // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  const keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  const ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint8Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 64) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xff\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  const ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  const output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n", "const b2b = require('./blake2b')\nconst b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n", null, null, null, null, "import { subscribe, snapshot, unstable_getInternalStates, proxy } from 'valtio/vanilla';\n\nfunction subscribeKey(proxyObject, key, callback, notifyInSync) {\n  let prevValue = proxyObject[key];\n  return subscribe(\n    proxyObject,\n    () => {\n      const nextValue = proxyObject[key];\n      if (!Object.is(prevValue, nextValue)) {\n        callback(prevValue = nextValue);\n      }\n    },\n    notifyInSync\n  );\n}\n\nlet currentCleanups;\nfunction watch(callback, options) {\n  let alive = true;\n  const cleanups = /* @__PURE__ */ new Set();\n  const subscriptions = /* @__PURE__ */ new Map();\n  const cleanup = () => {\n    if (alive) {\n      alive = false;\n      cleanups.forEach((clean) => clean());\n      cleanups.clear();\n      subscriptions.forEach((unsubscribe) => unsubscribe());\n      subscriptions.clear();\n    }\n  };\n  const revalidate = async () => {\n    if (!alive) {\n      return;\n    }\n    cleanups.forEach((clean) => clean());\n    cleanups.clear();\n    const proxiesToSubscribe = /* @__PURE__ */ new Set();\n    const parent = currentCleanups;\n    currentCleanups = cleanups;\n    try {\n      const promiseOrPossibleCleanup = callback((proxyObject) => {\n        proxiesToSubscribe.add(proxyObject);\n        if (alive && !subscriptions.has(proxyObject)) {\n          const unsubscribe = subscribe(proxyObject, revalidate, options == null ? void 0 : options.sync);\n          subscriptions.set(proxyObject, unsubscribe);\n        }\n        return proxyObject;\n      });\n      const couldBeCleanup = promiseOrPossibleCleanup && promiseOrPossibleCleanup instanceof Promise ? await promiseOrPossibleCleanup : promiseOrPossibleCleanup;\n      if (couldBeCleanup) {\n        if (alive) {\n          cleanups.add(couldBeCleanup);\n        } else {\n          cleanup();\n        }\n      }\n    } finally {\n      currentCleanups = parent;\n    }\n    subscriptions.forEach((unsubscribe, proxyObject) => {\n      if (!proxiesToSubscribe.has(proxyObject)) {\n        subscriptions.delete(proxyObject);\n        unsubscribe();\n      }\n    });\n  };\n  if (currentCleanups) {\n    currentCleanups.add(cleanup);\n  }\n  revalidate();\n  return cleanup;\n}\n\nconst DEVTOOLS = Symbol();\nfunction devtools(proxyObject, options) {\n  const { enabled, name = \"\", ...rest } = options || {};\n  let extension;\n  try {\n    extension = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extension) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\"[Warning] Please install/enable Redux devtools extension\");\n    }\n    return;\n  }\n  let isTimeTraveling = false;\n  const devtools2 = extension.connect({ name, ...rest });\n  const unsub1 = subscribe(proxyObject, (ops) => {\n    const action = ops.filter(([_, path]) => path[0] !== DEVTOOLS).map(([op, path]) => `${op}:${path.map(String).join(\".\")}`).join(\", \");\n    if (!action) {\n      return;\n    }\n    if (isTimeTraveling) {\n      isTimeTraveling = false;\n    } else {\n      const snapWithoutDevtools = Object.assign({}, snapshot(proxyObject));\n      delete snapWithoutDevtools[DEVTOOLS];\n      devtools2.send(\n        {\n          type: action,\n          updatedAt: (/* @__PURE__ */ new Date()).toLocaleString()\n        },\n        snapWithoutDevtools\n      );\n    }\n  });\n  const unsub2 = devtools2.subscribe((message) => {\n    var _a, _b, _c, _d, _e, _f;\n    if (message.type === \"ACTION\" && message.payload) {\n      try {\n        Object.assign(proxyObject, JSON.parse(message.payload));\n      } catch (e) {\n        console.error(\n          \"please dispatch a serializable value that JSON.parse() and proxy() support\\n\",\n          e\n        );\n      }\n    }\n    if (message.type === \"DISPATCH\" && message.state) {\n      if (((_a = message.payload) == null ? void 0 : _a.type) === \"JUMP_TO_ACTION\" || ((_b = message.payload) == null ? void 0 : _b.type) === \"JUMP_TO_STATE\") {\n        isTimeTraveling = true;\n        const state = JSON.parse(message.state);\n        Object.assign(proxyObject, state);\n      }\n      proxyObject[DEVTOOLS] = message;\n    } else if (message.type === \"DISPATCH\" && ((_c = message.payload) == null ? void 0 : _c.type) === \"COMMIT\") {\n      devtools2.init(snapshot(proxyObject));\n    } else if (message.type === \"DISPATCH\" && ((_d = message.payload) == null ? void 0 : _d.type) === \"IMPORT_STATE\") {\n      const actions = (_e = message.payload.nextLiftedState) == null ? void 0 : _e.actionsById;\n      const computedStates = ((_f = message.payload.nextLiftedState) == null ? void 0 : _f.computedStates) || [];\n      isTimeTraveling = true;\n      computedStates.forEach(({ state }, index) => {\n        const action = actions[index] || \"No action found\";\n        Object.assign(proxyObject, state);\n        if (index === 0) {\n          devtools2.init(snapshot(proxyObject));\n        } else {\n          devtools2.send(action, snapshot(proxyObject));\n        }\n      });\n    }\n  });\n  devtools2.init(snapshot(proxyObject));\n  return () => {\n    unsub1();\n    unsub2 == null ? void 0 : unsub2();\n  };\n}\n\nconst { proxyStateMap: proxyStateMap$1, snapCache: snapCache$1 } = unstable_getInternalStates();\nconst isProxy$1 = (x) => proxyStateMap$1.has(x);\nconst isProxyMap = (obj) => {\n  return Symbol.toStringTag in obj && obj[Symbol.toStringTag] === \"Map\" && proxyStateMap$1.has(obj);\n};\nfunction proxyMap(entries) {\n  const initialData = [];\n  let initialIndex = 0;\n  const indexMap = /* @__PURE__ */ new Map();\n  const snapMapCache = /* @__PURE__ */ new WeakMap();\n  const registerSnapMap = () => {\n    const cache = snapCache$1.get(vObject);\n    const latestSnap = cache == null ? void 0 : cache[1];\n    if (latestSnap && !snapMapCache.has(latestSnap)) {\n      const clonedMap = new Map(indexMap);\n      snapMapCache.set(latestSnap, clonedMap);\n    }\n  };\n  const getMapForThis = (x) => snapMapCache.get(x) || indexMap;\n  if (entries) {\n    if (typeof entries[Symbol.iterator] !== \"function\") {\n      throw new TypeError(\n        \"proxyMap:\\n\tinitial state must be iterable\\n\t\ttip: structure should be [[key, value]]\"\n      );\n    }\n    for (const [key, value] of entries) {\n      indexMap.set(key, initialIndex);\n      initialData[initialIndex++] = value;\n    }\n  }\n  const vObject = {\n    data: initialData,\n    index: initialIndex,\n    epoch: 0,\n    get size() {\n      if (!isProxy$1(this)) {\n        registerSnapMap();\n      }\n      const map = getMapForThis(this);\n      return map.size;\n    },\n    get(key) {\n      const map = getMapForThis(this);\n      const index = map.get(key);\n      if (index === void 0) {\n        this.epoch;\n        return void 0;\n      }\n      return this.data[index];\n    },\n    has(key) {\n      const map = getMapForThis(this);\n      this.epoch;\n      return map.has(key);\n    },\n    set(key, value) {\n      if (!isProxy$1(this)) {\n        throw new Error(\"Cannot perform mutations on a snapshot\");\n      }\n      const index = indexMap.get(key);\n      if (index === void 0) {\n        indexMap.set(key, this.index);\n        this.data[this.index++] = value;\n      } else {\n        this.data[index] = value;\n      }\n      this.epoch++;\n      return this;\n    },\n    delete(key) {\n      if (!isProxy$1(this)) {\n        throw new Error(\"Cannot perform mutations on a snapshot\");\n      }\n      const index = indexMap.get(key);\n      if (index === void 0) {\n        return false;\n      }\n      delete this.data[index];\n      indexMap.delete(key);\n      this.epoch++;\n      return true;\n    },\n    clear() {\n      if (!isProxy$1(this)) {\n        throw new Error(\"Cannot perform mutations on a snapshot\");\n      }\n      this.data.length = 0;\n      this.index = 0;\n      this.epoch++;\n      indexMap.clear();\n    },\n    forEach(cb) {\n      this.epoch;\n      const map = getMapForThis(this);\n      map.forEach((index, key) => {\n        cb(this.data[index], key, this);\n      });\n    },\n    *entries() {\n      this.epoch;\n      const map = getMapForThis(this);\n      for (const [key, index] of map) {\n        yield [key, this.data[index]];\n      }\n    },\n    *keys() {\n      this.epoch;\n      const map = getMapForThis(this);\n      for (const key of map.keys()) {\n        yield key;\n      }\n    },\n    *values() {\n      this.epoch;\n      const map = getMapForThis(this);\n      for (const index of map.values()) {\n        yield this.data[index];\n      }\n    },\n    [Symbol.iterator]() {\n      return this.entries();\n    },\n    get [Symbol.toStringTag]() {\n      return \"Map\";\n    },\n    toJSON() {\n      return new Map(this.entries());\n    }\n  };\n  const proxiedObject = proxy(vObject);\n  Object.defineProperties(proxiedObject, {\n    size: { enumerable: false },\n    index: { enumerable: false },\n    epoch: { enumerable: false },\n    data: { enumerable: false },\n    toJSON: { enumerable: false }\n  });\n  Object.seal(proxiedObject);\n  return proxiedObject;\n}\n\nconst { proxyStateMap, snapCache } = unstable_getInternalStates();\nconst maybeProxify = (x) => typeof x === \"object\" ? proxy({ x }).x : x;\nconst isProxy = (x) => proxyStateMap.has(x);\nconst isProxySet = (obj) => {\n  return Symbol.toStringTag in obj && obj[Symbol.toStringTag] === \"Set\" && proxyStateMap.has(obj);\n};\nfunction proxySet(initialValues) {\n  const initialData = [];\n  const indexMap = /* @__PURE__ */ new Map();\n  let initialIndex = 0;\n  const snapMapCache = /* @__PURE__ */ new WeakMap();\n  const registerSnapMap = () => {\n    const cache = snapCache.get(vObject);\n    const latestSnap = cache == null ? void 0 : cache[1];\n    if (latestSnap && !snapMapCache.has(latestSnap)) {\n      const clonedMap = new Map(indexMap);\n      snapMapCache.set(latestSnap, clonedMap);\n    }\n  };\n  const getMapForThis = (x) => snapMapCache.get(x) || indexMap;\n  if (initialValues) {\n    if (typeof initialValues[Symbol.iterator] !== \"function\") {\n      throw new TypeError(\"not iterable\");\n    }\n    for (const value of initialValues) {\n      if (!indexMap.has(value)) {\n        const v = maybeProxify(value);\n        indexMap.set(v, initialIndex);\n        initialData[initialIndex++] = v;\n      }\n    }\n  }\n  const vObject = {\n    data: initialData,\n    index: initialIndex,\n    epoch: 0,\n    get size() {\n      if (!isProxy(this)) {\n        registerSnapMap();\n      }\n      return indexMap.size;\n    },\n    has(value) {\n      const map = getMapForThis(this);\n      const v = maybeProxify(value);\n      this.epoch;\n      return map.has(v);\n    },\n    add(value) {\n      if (!isProxy(this)) {\n        throw new Error(\"Cannot perform mutations on a snapshot\");\n      }\n      const v = maybeProxify(value);\n      if (!indexMap.has(v)) {\n        indexMap.set(v, this.index);\n        this.data[this.index++] = v;\n        this.epoch++;\n      }\n      return this;\n    },\n    delete(value) {\n      if (!isProxy(this)) {\n        throw new Error(\"Cannot perform mutations on a snapshot\");\n      }\n      const v = maybeProxify(value);\n      const index = indexMap.get(v);\n      if (index === void 0) {\n        return false;\n      }\n      delete this.data[index];\n      indexMap.delete(v);\n      this.epoch++;\n      return true;\n    },\n    clear() {\n      if (!isProxy(this)) {\n        throw new Error(\"Cannot perform mutations on a snapshot\");\n      }\n      this.data.length = 0;\n      this.index = 0;\n      this.epoch++;\n      indexMap.clear();\n    },\n    forEach(cb) {\n      this.epoch;\n      const map = getMapForThis(this);\n      map.forEach((index) => {\n        cb(this.data[index], this.data[index], this);\n      });\n    },\n    *values() {\n      this.epoch;\n      const map = getMapForThis(this);\n      for (const index of map.values()) {\n        yield this.data[index];\n      }\n    },\n    keys() {\n      this.epoch;\n      return this.values();\n    },\n    *entries() {\n      this.epoch;\n      const map = getMapForThis(this);\n      for (const index of map.values()) {\n        const value = this.data[index];\n        yield [value, value];\n      }\n    },\n    toJSON() {\n      return new Set(this.values());\n    },\n    [Symbol.iterator]() {\n      return this.values();\n    },\n    get [Symbol.toStringTag]() {\n      return \"Set\";\n    },\n    intersection(other) {\n      this.epoch;\n      const otherSet = proxySet(other);\n      const resultSet = proxySet();\n      for (const value of this.values()) {\n        if (otherSet.has(value)) {\n          resultSet.add(value);\n        }\n      }\n      return proxySet(resultSet);\n    },\n    union(other) {\n      this.epoch;\n      const resultSet = proxySet();\n      const otherSet = proxySet(other);\n      for (const value of this.values()) {\n        resultSet.add(value);\n      }\n      for (const value of otherSet) {\n        resultSet.add(value);\n      }\n      return proxySet(resultSet);\n    },\n    difference(other) {\n      this.epoch;\n      const resultSet = proxySet();\n      const otherSet = proxySet(other);\n      for (const value of this.values()) {\n        if (!otherSet.has(value)) {\n          resultSet.add(value);\n        }\n      }\n      return proxySet(resultSet);\n    },\n    symmetricDifference(other) {\n      this.epoch;\n      const resultSet = proxySet();\n      const otherSet = proxySet(other);\n      for (const value of this.values()) {\n        if (!otherSet.has(value)) {\n          resultSet.add(value);\n        }\n      }\n      for (const value of otherSet.values()) {\n        if (!this.has(value)) {\n          resultSet.add(value);\n        }\n      }\n      return proxySet(resultSet);\n    },\n    isSubsetOf(other) {\n      this.epoch;\n      const otherSet = proxySet(other);\n      return this.size <= other.size && [...this.values()].every((value) => otherSet.has(value));\n    },\n    isSupersetOf(other) {\n      this.epoch;\n      const otherSet = proxySet(other);\n      return this.size >= other.size && [...otherSet].every((value) => this.has(value));\n    },\n    isDisjointFrom(other) {\n      this.epoch;\n      const otherSet = proxySet(other);\n      return [...this.values()].every((value) => !otherSet.has(value));\n    }\n  };\n  const proxiedObject = proxy(vObject);\n  Object.defineProperties(proxiedObject, {\n    size: { enumerable: false },\n    data: { enumerable: false },\n    index: { enumerable: false },\n    epoch: { enumerable: false },\n    toJSON: { enumerable: false }\n  });\n  Object.seal(proxiedObject);\n  return proxiedObject;\n}\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nlet defaultRefSet;\nconst getDefaultRefSet = () => {\n  if (!defaultRefSet) {\n    defaultRefSet = unstable_getInternalStates().refSet;\n  }\n  return defaultRefSet;\n};\nfunction deepClone(obj, getRefSet = getDefaultRefSet) {\n  if (!isObject(obj) || getRefSet().has(obj)) {\n    return obj;\n  }\n  if (isProxySet(obj)) {\n    return proxySet([...obj]);\n  }\n  if (isProxyMap(obj)) {\n    return proxyMap([\n      ...obj.entries()\n    ]);\n  }\n  const baseObject = Array.isArray(obj) ? [] : Object.create(Object.getPrototypeOf(obj));\n  Reflect.ownKeys(obj).forEach((key) => {\n    baseObject[key] = deepClone(obj[key], getRefSet);\n  });\n  return baseObject;\n}\n\nexport { deepClone, devtools, proxyMap, proxySet, subscribeKey, watch };\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport {\n  type Keccak256ErrorType,\n  keccak256,\n} from '../../utils/hash/keccak256.js'\n\nexport type PublicKeyToAddressErrorType =\n  | ChecksumAddressErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey: Hex): Address {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\n  return checksumAddress(`0x${address}`) as Address\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { size } from '../data/size.js'\nimport {\n  type HexToNumberErrorType,\n  hexToBigInt,\n  hexToNumber,\n} from '../encoding/fromHex.js'\nimport { toHex } from '../encoding/toHex.js'\n\nexport type RecoverPublicKeyParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverPublicKeyReturnType = Hex\n\nexport type RecoverPublicKeyErrorType =\n  | HexToNumberErrorType\n  | IsHexErrorType\n  | ErrorType\n\nexport async function recoverPublicKey({\n  hash,\n  signature,\n}: RecoverPublicKeyParameters): Promise<RecoverPublicKeyReturnType> {\n  const hashHex = isHex(hash) ? hash : toHex(hash)\n\n  const { secp256k1 } = await import('@noble/curves/secp256k1')\n  const signature_ = (() => {\n    // typeof signature: `Signature`\n    if (typeof signature === 'object' && 'r' in signature && 's' in signature) {\n      const { r, s, v, yParity } = signature\n      const yParityOrV = Number(yParity ?? v)!\n      const recoveryBit = toRecoveryBit(yParityOrV)\n      return new secp256k1.Signature(\n        hexToBigInt(r),\n        hexToBigInt(s),\n      ).addRecoveryBit(recoveryBit)\n    }\n\n    // typeof signature: `Hex | ByteArray`\n    const signatureHex = isHex(signature) ? signature : toHex(signature)\n    if (size(signatureHex) !== 65) throw new Error('invalid signature length')\n    const yParityOrV = hexToNumber(`0x${signatureHex.slice(130)}`)\n    const recoveryBit = toRecoveryBit(yParityOrV)\n    return secp256k1.Signature.fromCompact(\n      signatureHex.substring(2, 130),\n    ).addRecoveryBit(recoveryBit)\n  })()\n\n  const publicKey = signature_\n    .recoverPublicKey(hashHex.substring(2))\n    .toHex(false)\n  return `0x${publicKey}`\n}\n\nfunction toRecoveryBit(yParityOrV: number) {\n  if (yParityOrV === 0 || yParityOrV === 1) return yParityOrV\n  if (yParityOrV === 27) return 0\n  if (yParityOrV === 28) return 1\n  throw new Error('Invalid yParityOrV value')\n}\n", "import type { Address } from 'abitype'\n\nimport { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js'\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { recoverPublicKey } from './recoverPublicKey.js'\n\nexport type RecoverAddressParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverAddressReturnType = Address\n\nexport type RecoverAddressErrorType = ErrorType\n\nexport async function recoverAddress({\n  hash,\n  signature,\n}: RecoverAddressParameters): Promise<RecoverAddressReturnType> {\n  return publicKeyToAddress(await recoverPublicKey({ hash, signature }))\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { SignedAuthorizationList } from '../../types/authorization.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcAuthorizationList, RpcTransaction } from '../../types/rpc.js'\nimport type { Transaction, TransactionType } from '../../types/transaction.js'\nimport type { ExactPartial, UnionLooseOmit } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\ntype TransactionPendingDependencies =\n  | 'blockHash'\n  | 'blockNumber'\n  | 'transactionIndex'\n\nexport type FormattedTransaction<\n  chain extends Chain | undefined = undefined,\n  blockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    chain,\n    'transaction',\n    Transaction\n  >,\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\n    ExtractChainFormatterExclude<chain, 'transaction'>,\n> = UnionLooseOmit<_FormatterReturnType, TransactionPendingDependencies> & {\n  [_K in _ExcludedPendingDependencies]: never\n} & Pick<\n    Transaction<bigint, number, blockTag extends 'pending' ? true : false>,\n    TransactionPendingDependencies\n  >\n\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n  '0x3': 'eip4844',\n  '0x4': 'eip7702',\n} as const satisfies Record<Hex, TransactionType>\n\nexport type FormatTransactionErrorType = ErrorType\n\nexport function formatTransaction(transaction: ExactPartial<RpcTransaction>) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber\n      ? BigInt(transaction.blockNumber)\n      : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerBlobGas: transaction.maxFeePerBlobGas\n      ? BigInt(transaction.maxFeePerBlobGas)\n      : undefined,\n    maxFeePerGas: transaction.maxFeePerGas\n      ? BigInt(transaction.maxFeePerGas)\n      : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n      ? BigInt(transaction.maxPriorityFeePerGas)\n      : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex\n      ? Number(transaction.transactionIndex)\n      : null,\n    type: transaction.type\n      ? (transactionType as any)[transaction.type]\n      : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined,\n  } as Transaction\n\n  if (transaction.authorizationList)\n    transaction_.authorizationList = formatAuthorizationList(\n      transaction.authorizationList,\n    )\n\n  transaction_.yParity = (() => {\n    // If `yParity` is provided, we will use it.\n    if (transaction.yParity) return Number(transaction.yParity)\n\n    // If no `yParity` provided, try derive from `v`.\n    if (typeof transaction_.v === 'bigint') {\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0\n    }\n\n    return undefined\n  })()\n\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n    delete transaction_.yParity\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerBlobGas\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  if (transaction_.type === 'eip1559') {\n    delete transaction_.maxFeePerBlobGas\n  }\n  return transaction_\n}\n\nexport type DefineTransactionErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\n  'transaction',\n  formatTransaction,\n)\n\n//////////////////////////////////////////////////////////////////////////////\n\nfunction formatAuthorizationList(\n  authorizationList: RpcAuthorizationList,\n): SignedAuthorizationList {\n  return authorizationList.map((authorization) => ({\n    address: (authorization as any).address,\n    chainId: Number(authorization.chainId),\n    nonce: Number(authorization.nonce),\n    r: authorization.r,\n    s: authorization.s,\n    yParity: Number(authorization.yParity),\n  })) as SignedAuthorizationList\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Block, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\n\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\n\nexport type FormattedBlock<\n  chain extends Chain | undefined = undefined,\n  includeTransactions extends boolean = boolean,\n  blockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    chain,\n    'block',\n    Block<bigint, includeTransactions>\n  >,\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\n    ExtractChainFormatterExclude<chain, 'block'>,\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\n    [_key in _ExcludedPendingDependencies]: never\n  } & Pick<\n      Block<bigint, includeTransactions, blockTag>,\n      BlockPendingDependencies\n    >,\n  _Transactions = includeTransactions extends true\n    ? Prettify<FormattedTransaction<chain, blockTag>>[]\n    : Hash[],\n> = Omit<_Formatted, 'transactions'> & {\n  transactions: _Transactions\n}\n\nexport type FormatBlockErrorType = ErrorType\n\nexport function formatBlock(block: ExactPartial<RpcBlock>) {\n  const transactions = (block.transactions ?? []).map((transaction) => {\n    if (typeof transaction === 'string') return transaction\n    return formatTransaction(transaction)\n  })\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    excessBlobGas: block.excessBlobGas\n      ? BigInt(block.excessBlobGas)\n      : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty\n      ? BigInt(block.totalDifficulty)\n      : null,\n  } as Block\n}\n\nexport type DefineBlockErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetTransactionCountParameters = {\n  /** The account address. */\n  address: Address\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint | undefined\n      blockTag?: undefined\n    }\n  | {\n      blockNumber?: undefined\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag | undefined\n    }\n)\nexport type GetTransactionCountReturnType = number\n\nexport type GetTransactionCountErrorType =\n  | RequestErrorType\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\n/**\n * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has sent.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\n * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionCountParameters}\n * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionCount = await getTransactionCount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function getTransactionCount<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n>(\n  client: Client<Transport, chain, account>,\n  { address, blockTag = 'latest', blockNumber }: GetTransactionCountParameters,\n): Promise<GetTransactionCountReturnType> {\n  const count = await client.request(\n    {\n      method: 'eth_getTransactionCount',\n      params: [\n        address,\n        typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : blockTag,\n      ],\n    },\n    {\n      dedupe: Boolean(blockNumber),\n    },\n  )\n  return hexToNumber(count)\n}\n", "// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6\n\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32\n\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096\n\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob\n\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction =\n  bytesPerBlob * blobsPerTransaction -\n  // terminator byte (0x80).\n  1 -\n  // zero byte (0x00) appended to each field element.\n  1 * fieldElementsPerBlob * blobsPerTransaction\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\n\nexport type FormatLogErrorType = ErrorType\n\nexport function formatLog(\n  log: ExactPartial<RpcLog>,\n  {\n    args,\n    eventName,\n  }: { args?: unknown | undefined; eventName?: string | undefined } = {},\n) {\n  return {\n    ...log,\n    blockHash: log.blockHash ? log.blockHash : null,\n    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n    logIndex: log.logIndex ? Number(log.logIndex) : null,\n    transactionHash: log.transactionHash ? log.transactionHash : null,\n    transactionIndex: log.transactionIndex\n      ? Number(log.transactionIndex)\n      : null,\n    ...(eventName ? { args, eventName } : {}),\n  } as Log\n}\n", "import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTransactionErrorType } from '../../accounts/utils/signTransaction.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n  AccountTypeNotSupportedError,\n  type AccountTypeNotSupportedErrorType,\n} from '../../errors/account.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type {\n  Chain,\n  DeriveChain,\n  GetChainParameter,\n} from '../../types/chain.js'\nimport type { GetTransactionRequestKzgParameter } from '../../types/kzg.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type RecoverAuthorizationAddressErrorType,\n  recoverAuthorizationAddress,\n} from '../../utils/authorization/recoverAuthorizationAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type AssertCurrentChainErrorType,\n  assertCurrentChain,\n} from '../../utils/chain/assertCurrentChain.js'\nimport {\n  type GetTransactionErrorReturnType,\n  getTransactionError,\n} from '../../utils/errors/getTransactionError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { LruMap } from '../../utils/lru.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\nimport {\n  type PrepareTransactionRequestErrorType,\n  defaultParameters,\n  prepareTransactionRequest,\n} from './prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionErrorType,\n  sendRawTransaction,\n} from './sendRawTransaction.js'\n\nconst supportsWalletNamespace = new LruMap<boolean>(128)\n\nexport type SendTransactionRequest<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  ///\n  _derivedChain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = UnionOmit<FormattedTransactionRequest<_derivedChain>, 'from'> &\n  GetTransactionRequestKzgParameter\n\nexport type SendTransactionParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  request extends SendTransactionRequest<\n    chain,\n    chainOverride\n  > = SendTransactionRequest<chain, chainOverride>,\n> = request &\n  GetAccountParameter<account, Account | Address, true, true> &\n  GetChainParameter<chain, chainOverride> &\n  GetTransactionRequestKzgParameter<request>\n\nexport type SendTransactionReturnType = Hash\n\nexport type SendTransactionErrorType =\n  | ParseAccountErrorType\n  | GetTransactionErrorReturnType<\n      | AccountNotFoundErrorType\n      | AccountTypeNotSupportedErrorType\n      | AssertCurrentChainErrorType\n      | AssertRequestErrorType\n      | GetChainIdErrorType\n      | PrepareTransactionRequestErrorType\n      | SendRawTransactionErrorType\n      | RecoverAuthorizationAddressErrorType\n      | SignTransactionErrorType\n      | RequestErrorType\n    >\n  | ErrorType\n\n/**\n * Creates, signs, and sends a new transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n *\n * @param client - Client to use\n * @param parameters - {@link SendTransactionParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash. {@link SendTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await sendTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await sendTransaction(client, {\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendTransaction<\n  chain extends Chain | undefined,\n  account extends Account | undefined,\n  const request extends SendTransactionRequest<chain, chainOverride>,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SendTransactionParameters<chain, account, chainOverride, request>,\n): Promise<SendTransactionReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    accessList,\n    authorizationList,\n    blobs,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerBlobGas,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    type,\n    value,\n    ...rest\n  } = parameters\n\n  if (typeof account_ === 'undefined')\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n    })\n  const account = account_ ? parseAccount(account_) : null\n\n  try {\n    assertRequest(parameters as AssertRequestParameters)\n\n    const to = await (async () => {\n      // If `to` exists on the parameters, use that.\n      if (parameters.to) return parameters.to\n\n      // If `to` is null, we are sending a deployment transaction.\n      if (parameters.to === null) return undefined\n\n      // If no `to` exists, and we are sending a EIP-7702 transaction, use the\n      // address of the first authorization in the list.\n      if (authorizationList && authorizationList.length > 0)\n        return await recoverAuthorizationAddress({\n          authorization: authorizationList[0],\n        }).catch(() => {\n          throw new BaseError(\n            '`to` is required. Could not infer from `authorizationList`.',\n          )\n        })\n\n      // Otherwise, we are sending a deployment transaction.\n      return undefined\n    })()\n\n    if (account?.type === 'json-rpc' || account === null) {\n      let chainId: number | undefined\n      if (chain !== null) {\n        chainId = await getAction(client, getChainId, 'getChainId')({})\n        assertCurrentChain({\n          currentChainId: chainId,\n          chain,\n        })\n      }\n\n      const chainFormat = client.chain?.formatters?.transactionRequest?.format\n      const format = chainFormat || formatTransactionRequest\n\n      const request = format({\n        // Pick out extra data that might exist on the chain's transaction request type.\n        ...extract(rest, { format: chainFormat }),\n        accessList,\n        authorizationList,\n        blobs,\n        chainId,\n        data,\n        from: account?.address,\n        gas,\n        gasPrice,\n        maxFeePerBlobGas,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        type,\n        value,\n      } as TransactionRequest)\n\n      const isWalletNamespaceSupported = supportsWalletNamespace.get(client.uid)\n      const method = isWalletNamespaceSupported\n        ? 'wallet_sendTransaction'\n        : 'eth_sendTransaction'\n\n      try {\n        return await client.request(\n          {\n            method,\n            params: [request],\n          },\n          { retryCount: 0 },\n        )\n      } catch (e) {\n        if (isWalletNamespaceSupported === false) throw e\n\n        const error = e as BaseError\n        // If the transport does not support the method or input, attempt to use the\n        // `wallet_sendTransaction` method.\n        if (\n          error.name === 'InvalidInputRpcError' ||\n          error.name === 'InvalidParamsRpcError' ||\n          error.name === 'MethodNotFoundRpcError' ||\n          error.name === 'MethodNotSupportedRpcError'\n        ) {\n          return await client\n            .request(\n              {\n                method: 'wallet_sendTransaction',\n                params: [request],\n              },\n              { retryCount: 0 },\n            )\n            .then((hash) => {\n              supportsWalletNamespace.set(client.uid, true)\n              return hash\n            })\n            .catch((e) => {\n              const walletNamespaceError = e as BaseError\n              if (\n                walletNamespaceError.name === 'MethodNotFoundRpcError' ||\n                walletNamespaceError.name === 'MethodNotSupportedRpcError'\n              ) {\n                supportsWalletNamespace.set(client.uid, false)\n                throw error\n              }\n\n              throw walletNamespaceError\n            })\n        }\n\n        throw error\n      }\n    }\n\n    if (account?.type === 'local') {\n      // Prepare the request for signing (assign appropriate fees, etc.)\n      const request = await getAction(\n        client,\n        prepareTransactionRequest,\n        'prepareTransactionRequest',\n      )({\n        account,\n        accessList,\n        authorizationList,\n        blobs,\n        chain,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerBlobGas,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        nonceManager: account.nonceManager,\n        parameters: [...defaultParameters, 'sidecars'],\n        type,\n        value,\n        ...rest,\n        to,\n      } as any)\n\n      const serializer = chain?.serializers?.transaction\n      const serializedTransaction = (await account.signTransaction(request, {\n        serializer,\n      })) as Hash\n      return await getAction(\n        client,\n        sendRawTransaction,\n        'sendRawTransaction',\n      )({\n        serializedTransaction,\n      })\n    }\n\n    if (account?.type === 'smart')\n      throw new AccountTypeNotSupportedError({\n        metaMessages: [\n          'Consider using the `sendUserOperation` Action instead.',\n        ],\n        docsPath: '/docs/actions/bundler/sendUserOperation',\n        type: 'smart',\n      })\n\n    throw new AccountTypeNotSupportedError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n      type: (account as any)?.type,\n    })\n  } catch (err) {\n    if (err instanceof AccountTypeNotSupportedError) throw err\n    throw getTransactionError(err as BaseError, {\n      ...parameters,\n      account,\n      chain: parameters.chain || undefined,\n    })\n  }\n}\n", "import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  chain extends Chain | undefined = undefined,\n> = ExtractChainFormatterReturnType<\n  chain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nexport const receiptStatuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: ExactPartial<RpcTransactionReceipt>,\n) {\n  const receipt = {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? receiptStatuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n\n  if (transactionReceipt.blobGasPrice)\n    receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice)\n  if (transactionReceipt.blobGasUsed)\n    receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed)\n\n  return receipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n", "import type { Address, Narrow } from 'abitype'\nimport { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  AtomicityNotSupportedError,\n  UnsupportedNonOptionalCapabilityError,\n} from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account, GetAccountParameter } from '../../types/account.js'\nimport type { Call, Calls } from '../../types/calls.js'\nimport type { ExtractCapabilities } from '../../types/capabilities.js'\nimport type { Chain, DeriveChain } from '../../types/chain.js'\nimport type { WalletSendCallsParameters } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport { encodeFunctionData } from '../../utils/abi/encodeFunctionData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { concat } from '../../utils/data/concat.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\nimport { getTransactionError } from '../../utils/errors/getTransactionError.js'\nimport { sendTransaction } from './sendTransaction.js'\n\nexport const fallbackMagicIdentifier =\n  '0x5792579257925792579257925792579257925792579257925792579257925792'\nexport const fallbackTransactionErrorMagicIdentifier = numberToHex(0, {\n  size: 32,\n})\n\nexport type SendCallsParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  calls extends readonly unknown[] = readonly unknown[],\n  //\n  _chain extends Chain | undefined = DeriveChain<chain, chainOverride>,\n> = {\n  chain?: chainOverride | Chain | undefined\n  calls: Calls<Narrow<calls>>\n  capabilities?: ExtractCapabilities<'sendCalls', 'Request'> | undefined\n  experimental_fallback?: boolean | undefined\n  experimental_fallbackDelay?: number | undefined\n  forceAtomic?: boolean | undefined\n  id?: string | undefined\n  version?: WalletSendCallsParameters[number]['version'] | undefined\n} & GetAccountParameter<account, Account | Address, false, true>\n\nexport type SendCallsReturnType = Prettify<{\n  capabilities?: ExtractCapabilities<'sendCalls', 'ReturnType'> | undefined\n  id: string\n}>\n\nexport type SendCallsErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests the connected wallet to send a batch of calls.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendCalls\n * - JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Transaction identifier. {@link SendCallsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendCalls } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const id = await sendCalls(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   calls: [\n *     {\n *       data: '0xdeadbeef',\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *     },\n *     {\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       value: 69420n,\n *     },\n *   ],\n * })\n */\nexport async function sendCalls<\n  const calls extends readonly unknown[],\n  chain extends Chain | undefined,\n  account extends Account | undefined = undefined,\n  chainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, chain, account>,\n  parameters: SendCallsParameters<chain, account, chainOverride, calls>,\n): Promise<SendCallsReturnType> {\n  const {\n    account: account_ = client.account,\n    capabilities,\n    chain = client.chain,\n    experimental_fallback,\n    experimental_fallbackDelay = 32,\n    forceAtomic = false,\n    id,\n    version = '2.0.0',\n  } = parameters\n\n  const account = account_ ? parseAccount(account_) : null\n\n  const calls = parameters.calls.map((call_: unknown) => {\n    const call = call_ as Call\n\n    const data = call.abi\n      ? encodeFunctionData({\n          abi: call.abi,\n          functionName: call.functionName,\n          args: call.args,\n        })\n      : call.data\n\n    return {\n      data,\n      to: call.to,\n      value: call.value ? numberToHex(call.value) : undefined,\n    }\n  })\n\n  try {\n    const response = await client.request(\n      {\n        method: 'wallet_sendCalls',\n        params: [\n          {\n            atomicRequired: forceAtomic,\n            calls,\n            capabilities,\n            chainId: numberToHex(chain!.id),\n            from: account?.address,\n            id,\n            version,\n          },\n        ],\n      },\n      { retryCount: 0 },\n    )\n    if (typeof response === 'string') return { id: response }\n    return response as never\n  } catch (err) {\n    const error = err as BaseError\n\n    // If the transport does not support EIP-5792, fall back to\n    // `eth_sendTransaction`.\n    if (\n      experimental_fallback &&\n      (error.name === 'MethodNotFoundRpcError' ||\n        error.name === 'MethodNotSupportedRpcError' ||\n        error.details\n          .toLowerCase()\n          .includes('does not exist / is not available') ||\n        error.details.toLowerCase().includes('missing or invalid. request()') ||\n        error.details\n          .toLowerCase()\n          .includes('did not match any variant of untagged enum'))\n    ) {\n      if (capabilities) {\n        const hasNonOptionalCapability = Object.values(capabilities).some(\n          (capability) => !capability.optional,\n        )\n        if (hasNonOptionalCapability) {\n          const message =\n            'non-optional `capabilities` are not supported on fallback to `eth_sendTransaction`.'\n          throw new UnsupportedNonOptionalCapabilityError(\n            new BaseError(message, {\n              details: message,\n            }),\n          )\n        }\n      }\n      if (forceAtomic && calls.length > 1) {\n        const message =\n          '`forceAtomic` is not supported on fallback to `eth_sendTransaction`.'\n        throw new AtomicityNotSupportedError(\n          new BaseError(message, {\n            details: message,\n          }),\n        )\n      }\n\n      const promises: Promise<Hex>[] = []\n      for (const call of calls) {\n        const promise = sendTransaction(client, {\n          account,\n          chain,\n          data: call.data,\n          to: call.to,\n          value: call.value ? hexToBigInt(call.value) : undefined,\n        })\n        promises.push(promise)\n\n        // Note: some browser wallets require a small delay between transactions\n        // to prevent duplicate JSON-RPC requests.\n        if (experimental_fallbackDelay > 0)\n          await new Promise((resolve) =>\n            setTimeout(resolve, experimental_fallbackDelay),\n          )\n      }\n\n      const results = await Promise.allSettled(promises)\n      if (results.every((r) => r.status === 'rejected')) throw results[0].reason\n\n      const hashes = results.map((result) => {\n        if (result.status === 'fulfilled') return result.value\n        return fallbackTransactionErrorMagicIdentifier\n      })\n      return {\n        id: concat([\n          ...hashes,\n          numberToHex(chain!.id, { size: 32 }),\n          fallbackMagicIdentifier,\n        ]),\n      }\n    }\n\n    throw getTransactionError(err as BaseError, {\n      ...parameters,\n      account,\n      chain: parameters.chain!,\n    })\n  }\n}\n", "import { LruMap } from '../lru.js'\n\n/** @internal */\nexport const promiseCache = /*#__PURE__*/ new LruMap<Promise<any>>(8192)\n\ntype WithDedupeOptions = {\n  enabled?: boolean | undefined\n  id?: string | undefined\n}\n\n/** Deduplicates in-flight promises. */\nexport function withDedupe<data>(\n  fn: () => Promise<data>,\n  { enabled = true, id }: WithDedupeOptions,\n): Promise<data> {\n  if (!enabled || !id) return fn()\n  if (promiseCache.get(id)) return promiseCache.get(id)!\n  const promise = fn().finally(() => promiseCache.delete(id))\n  promiseCache.set(id, promise)\n  return promise\n}\n", "function createIdStore() {\n  return {\n    current: 0,\n    take() {\n      return this.current++\n    },\n    reset() {\n      this.current = 0\n    },\n  }\n}\n\nexport const idCache = /*#__PURE__*/ createIdStore()\n", "/**\n\nSHA1 (RFC 3174), MD5 (RFC 1321) and RIPEMD160 (RFC 2286) legacy, weak hash functions.\nDon't use them in a new protocol. What \"weak\" means:\n\n- Collisions can be made with 2^18 effort in MD5, 2^60 in SHA1, 2^80 in RIPEMD160.\n- No practical pre-image attacks (only theoretical, 2^123.4)\n- HMAC seems kinda ok: https://datatracker.ietf.org/doc/html/rfc6151\n * @module\n */\nimport { Chi, HashMD, Maj } from './_md.ts';\nimport { type CHash, clean, createHasher, rotl } from './utils.ts';\n\n/** Initial SHA1 state */\nconst SHA1_IV = /* @__PURE__ */ Uint32Array.from([\n  0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0,\n]);\n\n// Reusable temporary buffer\nconst SHA1_W = /* @__PURE__ */ new Uint32Array(80);\n\n/** SHA1 legacy hash class. */\nexport class SHA1 extends HashMD<SHA1> {\n  private A = SHA1_IV[0] | 0;\n  private B = SHA1_IV[1] | 0;\n  private C = SHA1_IV[2] | 0;\n  private D = SHA1_IV[3] | 0;\n  private E = SHA1_IV[4] | 0;\n\n  constructor() {\n    super(64, 20, 8, false);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { A, B, C, D, E } = this;\n    return [A, B, C, D, E];\n  }\n  protected set(A: number, B: number, C: number, D: number, E: number): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) SHA1_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 80; i++)\n      SHA1_W[i] = rotl(SHA1_W[i - 3] ^ SHA1_W[i - 8] ^ SHA1_W[i - 14] ^ SHA1_W[i - 16], 1);\n    // Compression function main loop, 80 rounds\n    let { A, B, C, D, E } = this;\n    for (let i = 0; i < 80; i++) {\n      let F, K;\n      if (i < 20) {\n        F = Chi(B, C, D);\n        K = 0x5a827999;\n      } else if (i < 40) {\n        F = B ^ C ^ D;\n        K = 0x6ed9eba1;\n      } else if (i < 60) {\n        F = Maj(B, C, D);\n        K = 0x8f1bbcdc;\n      } else {\n        F = B ^ C ^ D;\n        K = 0xca62c1d6;\n      }\n      const T = (rotl(A, 5) + F + E + K + SHA1_W[i]) | 0;\n      E = D;\n      D = C;\n      C = rotl(B, 30);\n      B = A;\n      A = T;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    this.set(A, B, C, D, E);\n  }\n  protected roundClean(): void {\n    clean(SHA1_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\n/** SHA1 (RFC 3174) legacy hash function. It was cryptographically broken. */\nexport const sha1: CHash = /* @__PURE__ */ createHasher(() => new SHA1());\n\n/** Per-round constants */\nconst p32 = /* @__PURE__ */ Math.pow(2, 32);\nconst K = /* @__PURE__ */ Array.from({ length: 64 }, (_, i) =>\n  Math.floor(p32 * Math.abs(Math.sin(i + 1)))\n);\n\n/** md5 initial state: same as sha1, but 4 u32 instead of 5. */\nconst MD5_IV = /* @__PURE__ */ SHA1_IV.slice(0, 4);\n\n// Reusable temporary buffer\nconst MD5_W = /* @__PURE__ */ new Uint32Array(16);\n/** MD5 legacy hash class. */\nexport class MD5 extends HashMD<MD5> {\n  private A = MD5_IV[0] | 0;\n  private B = MD5_IV[1] | 0;\n  private C = MD5_IV[2] | 0;\n  private D = MD5_IV[3] | 0;\n\n  constructor() {\n    super(64, 16, 8, true);\n  }\n  protected get(): [number, number, number, number] {\n    const { A, B, C, D } = this;\n    return [A, B, C, D];\n  }\n  protected set(A: number, B: number, C: number, D: number): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) MD5_W[i] = view.getUint32(offset, true);\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D } = this;\n    for (let i = 0; i < 64; i++) {\n      let F, g, s;\n      if (i < 16) {\n        F = Chi(B, C, D);\n        g = i;\n        s = [7, 12, 17, 22];\n      } else if (i < 32) {\n        F = Chi(D, B, C);\n        g = (5 * i + 1) % 16;\n        s = [5, 9, 14, 20];\n      } else if (i < 48) {\n        F = B ^ C ^ D;\n        g = (3 * i + 5) % 16;\n        s = [4, 11, 16, 23];\n      } else {\n        F = C ^ (B | ~D);\n        g = (7 * i) % 16;\n        s = [6, 10, 15, 21];\n      }\n      F = F + A + K[i] + MD5_W[g];\n      A = D;\n      D = C;\n      C = B;\n      B = B + rotl(F, s[i % 4]);\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    this.set(A, B, C, D);\n  }\n  protected roundClean(): void {\n    clean(MD5_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\n/**\n * MD5 (RFC 1321) legacy hash function. It was cryptographically broken.\n * MD5 architecture is similar to SHA1, with some differences:\n * - Reduced output length: 16 bytes (128 bit) instead of 20\n * - 64 rounds, instead of 80\n * - Little-endian: could be faster, but will require more code\n * - Non-linear index selection: huge speed-up for unroll\n * - Per round constants: more memory accesses, additional speed-up for unroll\n */\nexport const md5: CHash = /* @__PURE__ */ createHasher(() => new MD5());\n\n// RIPEMD-160\n\nconst Rho160 = /* @__PURE__ */ Uint8Array.from([\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n]);\nconst Id160 = /* @__PURE__ */ (() => Uint8Array.from(new Array(16).fill(0).map((_, i) => i)))();\nconst Pi160 = /* @__PURE__ */ (() => Id160.map((i) => (9 * i + 5) % 16))();\nconst idxLR = /* @__PURE__ */ (() => {\n  const L = [Id160];\n  const R = [Pi160];\n  const res = [L, R];\n  for (let i = 0; i < 4; i++) for (let j of res) j.push(j[i].map((k) => Rho160[k]));\n  return res;\n})();\nconst idxL = /* @__PURE__ */ (() => idxLR[0])();\nconst idxR = /* @__PURE__ */ (() => idxLR[1])();\n// const [idxL, idxR] = idxLR;\n\nconst shifts160 = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => Uint8Array.from(i));\nconst shiftsL160 = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst shiftsR160 = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts160[i][j]));\nconst Kl160 = /* @__PURE__ */ Uint32Array.from([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr160 = /* @__PURE__ */ Uint32Array.from([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction ripemd_f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  if (group === 1) return (x & y) | (~x & z);\n  if (group === 2) return (x | ~y) ^ z;\n  if (group === 3) return (x & z) | (y & ~z);\n  return x ^ (y | ~z);\n}\n// Reusable temporary buffer\nconst BUF_160 = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends HashMD<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number): void {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF_160[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl160[group], hbr = Kr160[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL160[group], sr = shiftsR160[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + ripemd_f(group, bl, cl, dl) + BUF_160[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + ripemd_f(rGroup, br, cr, dr) + BUF_160[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean(): void {\n    clean(BUF_160);\n  }\n  destroy(): void {\n    this.destroyed = true;\n    clean(this.buffer);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a legacy hash function from 1990s.\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n * * https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\n */\nexport const ripemd160: CHash = /* @__PURE__ */ createHasher(() => new RIPEMD160());\n", "import type { Address } from 'abitype'\n\nimport { getTransactionCount } from '../actions/public/getTransactionCount.js'\nimport type { Client } from '../clients/createClient.js'\nimport type { MaybePromise } from '../types/utils.js'\nimport { LruMap } from './lru.js'\n\nexport type CreateNonceManagerParameters = {\n  source: NonceManagerSource\n}\n\ntype FunctionParameters = {\n  address: Address\n  chainId: number\n}\n\nexport type NonceManager = {\n  /** Get and increment a nonce. */\n  consume: (\n    parameters: FunctionParameters & { client: Client },\n  ) => Promise<number>\n  /** Increment a nonce. */\n  increment: (chainId: FunctionParameters) => void\n  /** Get a nonce. */\n  get: (chainId: FunctionParameters & { client: Client }) => Promise<number>\n  /** Reset a nonce. */\n  reset: (chainId: FunctionParameters) => void\n}\n\n/**\n * Creates a nonce manager for auto-incrementing transaction nonces.\n *\n * - Docs: https://viem.sh/docs/accounts/createNonceManager\n *\n * @example\n * ```ts\n * const nonceManager = createNonceManager({\n *   source: jsonRpc(),\n * })\n * ```\n */\nexport function createNonceManager(\n  parameters: CreateNonceManagerParameters,\n): NonceManager {\n  const { source } = parameters\n\n  const deltaMap = new Map()\n  const nonceMap = new LruMap<number>(8192)\n  const promiseMap = new Map<string, Promise<number>>()\n\n  const getKey = ({ address, chainId }: FunctionParameters) =>\n    `${address}.${chainId}`\n\n  return {\n    async consume({ address, chainId, client }) {\n      const key = getKey({ address, chainId })\n      const promise = this.get({ address, chainId, client })\n\n      this.increment({ address, chainId })\n      const nonce = await promise\n\n      await source.set({ address, chainId }, nonce)\n      nonceMap.set(key, nonce)\n\n      return nonce\n    },\n    async increment({ address, chainId }) {\n      const key = getKey({ address, chainId })\n      const delta = deltaMap.get(key) ?? 0\n      deltaMap.set(key, delta + 1)\n    },\n    async get({ address, chainId, client }) {\n      const key = getKey({ address, chainId })\n\n      let promise = promiseMap.get(key)\n      if (!promise) {\n        promise = (async () => {\n          try {\n            const nonce = await source.get({ address, chainId, client })\n            const previousNonce = nonceMap.get(key) ?? 0\n            if (previousNonce > 0 && nonce <= previousNonce)\n              return previousNonce + 1\n            nonceMap.delete(key)\n            return nonce\n          } finally {\n            this.reset({ address, chainId })\n          }\n        })()\n        promiseMap.set(key, promise)\n      }\n\n      const delta = deltaMap.get(key) ?? 0\n      return delta + (await promise)\n    },\n    reset({ address, chainId }) {\n      const key = getKey({ address, chainId })\n      deltaMap.delete(key)\n      promiseMap.delete(key)\n    },\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n// Sources\n\nexport type NonceManagerSource = {\n  /** Get a nonce. */\n  get(parameters: FunctionParameters & { client: Client }): MaybePromise<number>\n  /** Set a nonce. */\n  set(parameters: FunctionParameters, nonce: number): MaybePromise<void>\n}\n\n/** JSON-RPC source for a nonce manager. */\nexport function jsonRpc(): NonceManagerSource {\n  return {\n    async get(parameters) {\n      const { address, client } = parameters\n      return getTransactionCount(client, {\n        address,\n        blockTag: 'pending',\n      })\n    },\n    set() {},\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////\n// Default\n\n/** Default Nonce Manager with a JSON-RPC source. */\nexport const nonceManager = /*#__PURE__*/ createNonceManager({\n  source: jsonRpc(),\n})\n", "import { ripemd160 as noble_ripemd160 } from '@noble/hashes/ripemd160'\nimport { keccak_256 as noble_keccak256 } from '@noble/hashes/sha3'\nimport { sha256 as noble_sha256 } from '@noble/hashes/sha256'\nimport * as Bytes from './Bytes.js'\nimport type * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\n\n/**\n * Calculates the [Keccak256](https://en.wikipedia.org/wiki/SHA-3) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `keccak_256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef')\n * // @log: '0xd4fd4e189132273036449fc9e11198c739161b4c0116a9a2dccdfa1c492006f1'\n * ```\n *\n * @example\n * ### Calculate Hash of a String\n *\n * ```ts twoslash\n * import { Hash, Hex } from 'ox'\n *\n * Hash.keccak256(Hex.fromString('hello world'))\n * // @log: '0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0'\n * ```\n *\n * @example\n * ### Configure Return Type\n *\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef', { as: 'Bytes' })\n * // @log: Uint8Array [...]\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Keccak256 hash.\n */\nexport function keccak256<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: keccak256.Options<as> = {},\n): keccak256.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_keccak256(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace keccak256 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Calculates the [Ripemd160](https://en.wikipedia.org/wiki/RIPEMD) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `ripemd160` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.ripemd160('0xdeadbeef')\n * // '0x226821c2f5423e11fe9af68bd285c249db2e4b5a'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Ripemd160 hash.\n */\nexport function ripemd160<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: ripemd160.Options<as> = {},\n): ripemd160.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_ripemd160(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace ripemd160 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex' | 'Bytes'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Calculates the [Sha256](https://en.wikipedia.org/wiki/SHA-256) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `sha256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.sha256('0xdeadbeef')\n * // '0x5f78c33274e43fa9de5659265c1d917e25c03722dcb0b8d27db8d5feaa813953'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Sha256 hash.\n */\nexport function sha256<\n  value extends Hex.Hex | Bytes.Bytes,\n  as extends 'Hex' | 'Bytes' =\n    | (value extends Hex.Hex ? 'Hex' : never)\n    | (value extends Bytes.Bytes ? 'Bytes' : never),\n>(\n  value: value | Hex.Hex | Bytes.Bytes,\n  options: sha256.Options<as> = {},\n): sha256.ReturnType<as> {\n  const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options\n  const bytes = noble_sha256(Bytes.from(value))\n  if (as === 'Bytes') return bytes as never\n  return Hex.fromBytes(bytes) as never\n}\n\nexport declare namespace sha256 {\n  type Options<as extends 'Hex' | 'Bytes' = 'Hex'> = {\n    /** The return type. @default 'Hex' */\n    as?: as | 'Hex' | 'Bytes' | undefined\n  }\n\n  type ReturnType<as extends 'Hex' | 'Bytes' = 'Hex'> =\n    | (as extends 'Bytes' ? Bytes.Bytes : never)\n    | (as extends 'Hex' ? Hex.Hex : never)\n\n  type ErrorType =\n    | Bytes.from.ErrorType\n    | Hex.fromBytes.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if a string is a valid hash value.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.validate('0x')\n * // @log: false\n *\n * Hash.validate('0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0')\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns Whether the value is a valid hash.\n */\nexport function validate(value: string): value is Hex.Hex {\n  return Hex.validate(value) && Hex.size(value) === 32\n}\n\nexport declare namespace validate {\n  type ErrorType =\n    | Hex.validate.ErrorType\n    | Hex.size.ErrorType\n    | Errors.GlobalErrorType\n}\n", "/**\n * @internal\n *\n * Map with a LRU (Least recently used) policy.\n * @see https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap<value = unknown> extends Map<string, value> {\n  maxSize: number\n\n  constructor(size: number) {\n    super()\n    this.maxSize = size\n  }\n\n  override get(key: string) {\n    const value = super.get(key)\n\n    if (super.has(key) && value !== undefined) {\n      this.delete(key)\n      super.set(key, value)\n    }\n\n    return value\n  }\n\n  override set(key: string, value: value) {\n    super.set(key, value)\n    if (this.maxSize && this.size > this.maxSize) {\n      const firstKey = this.keys().next().value\n      if (firstKey) this.delete(firstKey)\n    }\n    return this\n  }\n}\n", "import type * as Address from './Address.js'\nimport { LruMap } from './internal/lru.js'\n\nconst caches = {\n  checksum: /*#__PURE__*/ new LruMap<Address.Address>(8192),\n}\n\nexport const checksum = caches.checksum\n\n/**\n * Clears all global caches.\n *\n * @example\n * ```ts\n * import { Caches } from 'ox'\n * Caches.clear()\n * ```\n */\nexport function clear() {\n  for (const cache of Object.values(caches)) cache.clear()\n}\n", "import type { Address as abitype_Address } from 'abitype'\nimport * as Bytes from './Bytes.js'\nimport * as Caches from './Caches.js'\nimport * as Errors from './Errors.js'\nimport * as Hash from './Hash.js'\nimport * as PublicKey from './PublicKey.js'\n\nconst addressRegex = /*#__PURE__*/ /^0x[a-fA-F0-9]{40}$/\n\n/** Root type for Address. */\nexport type Address = abitype_Address\n\n/**\n * Asserts that the given value is a valid {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.assert('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.assert('0xdeadbeef')\n * // @error: InvalidAddressError: Address \"0xdeadbeef\" is invalid.\n * ```\n *\n * @param value - Value to assert if it is a valid address.\n * @param options - Assertion options.\n */\nexport function assert(\n  value: string,\n  options: assert.Options = {},\n): asserts value is Address {\n  const { strict = true } = options\n\n  if (!addressRegex.test(value))\n    throw new InvalidAddressError({\n      address: value,\n      cause: new InvalidInputError(),\n    })\n\n  if (strict) {\n    if (value.toLowerCase() === value) return\n    if (checksum(value as Address) !== value)\n      throw new InvalidAddressError({\n        address: value,\n        cause: new InvalidChecksumError(),\n      })\n  }\n}\n\nexport declare namespace assert {\n  type Options = {\n    /**\n     * Enables strict mode. Whether or not to compare the address against its checksum.\n     *\n     * @default true\n     */\n    strict?: boolean | undefined\n  }\n\n  type ErrorType = InvalidAddressError | Errors.GlobalErrorType\n}\n\n/**\n * Computes the checksum address for the given {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.checksum('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * ```\n *\n * @param address - The address to compute the checksum for.\n * @returns The checksummed address.\n */\nexport function checksum(address: string): Address {\n  if (Caches.checksum.has(address)) return Caches.checksum.get(address)!\n\n  assert(address, { strict: false })\n\n  const hexAddress = address.substring(2).toLowerCase()\n  const hash = Hash.keccak256(Bytes.fromString(hexAddress), { as: 'Bytes' })\n\n  const characters = hexAddress.split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1]! >> 4 >= 8 && characters[i]) {\n      characters[i] = characters[i]!.toUpperCase()\n    }\n    if ((hash[i >> 1]! & 0x0f) >= 8 && characters[i + 1]) {\n      characters[i + 1] = characters[i + 1]!.toUpperCase()\n    }\n  }\n\n  const result = `0x${characters.join('')}` as const\n  Caches.checksum.set(address, result)\n  return result\n}\n\nexport declare namespace checksum {\n  type ErrorType =\n    | assert.ErrorType\n    | Hash.keccak256.ErrorType\n    | Bytes.fromString.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts a stringified address to a typed (checksummed) {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e', {\n *   checksum: false\n * })\n * // @log: '0xa0cf798816d4b9b9866b5330eea46a18382f251e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('hello')\n * // @error: InvalidAddressError: Address \"0xa\" is invalid.\n * ```\n *\n * @param address - An address string to convert to a typed Address.\n * @param options - Conversion options.\n * @returns The typed Address.\n */\nexport function from(address: string, options: from.Options = {}): Address {\n  const { checksum: checksumVal = false } = options\n  assert(address)\n  if (checksumVal) return checksum(address)\n  return address as Address\n}\n\nexport declare namespace from {\n  type Options = {\n    /**\n     * Whether to checksum the address.\n     *\n     * @default false\n     */\n    checksum?: boolean | undefined\n  }\n\n  type ErrorType =\n    | assert.ErrorType\n    | checksum.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Converts an ECDSA public key to an {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address, PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from(\n *   '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5',\n * )\n * const address = Address.fromPublicKey(publicKey)\n * // @log: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266'\n * ```\n *\n * @param publicKey - The ECDSA public key to convert to an {@link ox#Address.Address}.\n * @param options - Conversion options.\n * @returns The {@link ox#Address.Address} corresponding to the public key.\n */\nexport function fromPublicKey(\n  publicKey: PublicKey.PublicKey,\n  options: fromPublicKey.Options = {},\n): Address {\n  const address = Hash.keccak256(\n    `0x${PublicKey.toHex(publicKey).slice(4)}`,\n  ).substring(26)\n  return from(`0x${address}`, options)\n}\n\nexport declare namespace fromPublicKey {\n  type Options = {\n    /**\n     * Whether to checksum the address.\n     *\n     * @default false\n     */\n    checksum?: boolean | undefined\n  }\n\n  type ErrorType =\n    | Hash.keccak256.ErrorType\n    | PublicKey.toHex.ErrorType\n    | Errors.GlobalErrorType\n}\n\n/**\n * Checks if two {@link ox#Address.Address} are equal.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.isEqual(\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * )\n * // @log: true\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.isEqual(\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251f'\n * )\n * // @log: false\n * ```\n *\n * @param addressA - The first address to compare.\n * @param addressB - The second address to compare.\n * @returns Whether the addresses are equal.\n */\nexport function isEqual(addressA: Address, addressB: Address): boolean {\n  assert(addressA, { strict: false })\n  assert(addressB, { strict: false })\n  return addressA.toLowerCase() === addressB.toLowerCase()\n}\n\nexport declare namespace isEqual {\n  type ErrorType = assert.ErrorType | Errors.GlobalErrorType\n}\n\n/**\n * Checks if the given address is a valid {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.validate('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\n * // @log: true\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.validate('0xdeadbeef')\n * // @log: false\n * ```\n *\n * @param address - Value to check if it is a valid address.\n * @param options - Check options.\n * @returns Whether the address is a valid address.\n */\nexport function validate(\n  address: string,\n  options: validate.Options = {},\n): address is Address {\n  const { strict = true } = options ?? {}\n  try {\n    assert(address, { strict })\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport declare namespace validate {\n  type Options = {\n    /**\n     * Enables strict mode. Whether or not to compare the address against its checksum.\n     *\n     * @default true\n     */\n    strict?: boolean | undefined\n  }\n}\n\n/**\n * Thrown when an address is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0x123')\n * // @error: Address.InvalidAddressError: Address `0x123` is invalid.\n * ```\n */\nexport class InvalidAddressError<\n  cause extends InvalidInputError | InvalidChecksumError =\n    | InvalidInputError\n    | InvalidChecksumError,\n> extends Errors.BaseError<cause> {\n  override readonly name = 'Address.InvalidAddressError'\n\n  constructor({ address, cause }: { address: string; cause: cause }) {\n    super(`Address \"${address}\" is invalid.`, {\n      cause,\n    })\n  }\n}\n\n/** Thrown when an address is not a 20 byte (40 hexadecimal character) value. */\nexport class InvalidInputError extends Errors.BaseError {\n  override readonly name = 'Address.InvalidInputError'\n\n  constructor() {\n    super('Address is not a 20 byte (40 hexadecimal character) value.')\n  }\n}\n\n/** Thrown when an address does not match its checksum counterpart. */\nexport class InvalidChecksumError extends Errors.BaseError {\n  override readonly name = 'Address.InvalidChecksumError'\n\n  constructor() {\n    super('Address does not match its checksum counterpart.')\n  }\n}\n", "export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n\nexport const maxInt8 = 2n ** (8n - 1n) - 1n\nexport const maxInt16 = 2n ** (16n - 1n) - 1n\nexport const maxInt24 = 2n ** (24n - 1n) - 1n\nexport const maxInt32 = 2n ** (32n - 1n) - 1n\nexport const maxInt40 = 2n ** (40n - 1n) - 1n\nexport const maxInt48 = 2n ** (48n - 1n) - 1n\nexport const maxInt56 = 2n ** (56n - 1n) - 1n\nexport const maxInt64 = 2n ** (64n - 1n) - 1n\nexport const maxInt72 = 2n ** (72n - 1n) - 1n\nexport const maxInt80 = 2n ** (80n - 1n) - 1n\nexport const maxInt88 = 2n ** (88n - 1n) - 1n\nexport const maxInt96 = 2n ** (96n - 1n) - 1n\nexport const maxInt104 = 2n ** (104n - 1n) - 1n\nexport const maxInt112 = 2n ** (112n - 1n) - 1n\nexport const maxInt120 = 2n ** (120n - 1n) - 1n\nexport const maxInt128 = 2n ** (128n - 1n) - 1n\nexport const maxInt136 = 2n ** (136n - 1n) - 1n\nexport const maxInt144 = 2n ** (144n - 1n) - 1n\nexport const maxInt152 = 2n ** (152n - 1n) - 1n\nexport const maxInt160 = 2n ** (160n - 1n) - 1n\nexport const maxInt168 = 2n ** (168n - 1n) - 1n\nexport const maxInt176 = 2n ** (176n - 1n) - 1n\nexport const maxInt184 = 2n ** (184n - 1n) - 1n\nexport const maxInt192 = 2n ** (192n - 1n) - 1n\nexport const maxInt200 = 2n ** (200n - 1n) - 1n\nexport const maxInt208 = 2n ** (208n - 1n) - 1n\nexport const maxInt216 = 2n ** (216n - 1n) - 1n\nexport const maxInt224 = 2n ** (224n - 1n) - 1n\nexport const maxInt232 = 2n ** (232n - 1n) - 1n\nexport const maxInt240 = 2n ** (240n - 1n) - 1n\nexport const maxInt248 = 2n ** (248n - 1n) - 1n\nexport const maxInt256 = 2n ** (256n - 1n) - 1n\n\nexport const minInt8 = -(2n ** (8n - 1n))\nexport const minInt16 = -(2n ** (16n - 1n))\nexport const minInt24 = -(2n ** (24n - 1n))\nexport const minInt32 = -(2n ** (32n - 1n))\nexport const minInt40 = -(2n ** (40n - 1n))\nexport const minInt48 = -(2n ** (48n - 1n))\nexport const minInt56 = -(2n ** (56n - 1n))\nexport const minInt64 = -(2n ** (64n - 1n))\nexport const minInt72 = -(2n ** (72n - 1n))\nexport const minInt80 = -(2n ** (80n - 1n))\nexport const minInt88 = -(2n ** (88n - 1n))\nexport const minInt96 = -(2n ** (96n - 1n))\nexport const minInt104 = -(2n ** (104n - 1n))\nexport const minInt112 = -(2n ** (112n - 1n))\nexport const minInt120 = -(2n ** (120n - 1n))\nexport const minInt128 = -(2n ** (128n - 1n))\nexport const minInt136 = -(2n ** (136n - 1n))\nexport const minInt144 = -(2n ** (144n - 1n))\nexport const minInt152 = -(2n ** (152n - 1n))\nexport const minInt160 = -(2n ** (160n - 1n))\nexport const minInt168 = -(2n ** (168n - 1n))\nexport const minInt176 = -(2n ** (176n - 1n))\nexport const minInt184 = -(2n ** (184n - 1n))\nexport const minInt192 = -(2n ** (192n - 1n))\nexport const minInt200 = -(2n ** (200n - 1n))\nexport const minInt208 = -(2n ** (208n - 1n))\nexport const minInt216 = -(2n ** (216n - 1n))\nexport const minInt224 = -(2n ** (224n - 1n))\nexport const minInt232 = -(2n ** (232n - 1n))\nexport const minInt240 = -(2n ** (240n - 1n))\nexport const minInt248 = -(2n ** (248n - 1n))\nexport const minInt256 = -(2n ** (256n - 1n))\n\nexport const maxUint8 = 2n ** 8n - 1n\nexport const maxUint16 = 2n ** 16n - 1n\nexport const maxUint24 = 2n ** 24n - 1n\nexport const maxUint32 = 2n ** 32n - 1n\nexport const maxUint40 = 2n ** 40n - 1n\nexport const maxUint48 = 2n ** 48n - 1n\nexport const maxUint56 = 2n ** 56n - 1n\nexport const maxUint64 = 2n ** 64n - 1n\nexport const maxUint72 = 2n ** 72n - 1n\nexport const maxUint80 = 2n ** 80n - 1n\nexport const maxUint88 = 2n ** 88n - 1n\nexport const maxUint96 = 2n ** 96n - 1n\nexport const maxUint104 = 2n ** 104n - 1n\nexport const maxUint112 = 2n ** 112n - 1n\nexport const maxUint120 = 2n ** 120n - 1n\nexport const maxUint128 = 2n ** 128n - 1n\nexport const maxUint136 = 2n ** 136n - 1n\nexport const maxUint144 = 2n ** 144n - 1n\nexport const maxUint152 = 2n ** 152n - 1n\nexport const maxUint160 = 2n ** 160n - 1n\nexport const maxUint168 = 2n ** 168n - 1n\nexport const maxUint176 = 2n ** 176n - 1n\nexport const maxUint184 = 2n ** 184n - 1n\nexport const maxUint192 = 2n ** 192n - 1n\nexport const maxUint200 = 2n ** 200n - 1n\nexport const maxUint208 = 2n ** 208n - 1n\nexport const maxUint216 = 2n ** 216n - 1n\nexport const maxUint224 = 2n ** 224n - 1n\nexport const maxUint232 = 2n ** 232n - 1n\nexport const maxUint240 = 2n ** 240n - 1n\nexport const maxUint248 = 2n ** 248n - 1n\nexport const maxUint256 = 2n ** 256n - 1n\n", "import type { Bytes } from '../Bytes.js'\nimport * as Errors from '../Errors.js'\n\n/** @internal */\nexport type Cursor = {\n  bytes: Bytes\n  dataView: DataView\n  position: number\n  positionReadCount: Map<number, number>\n  recursiveReadCount: number\n  recursiveReadLimit: number\n  remaining: number\n  assertReadLimit(position?: number): void\n  assertPosition(position: number): void\n  decrementPosition(offset: number): void\n  getReadCount(position?: number): number\n  incrementPosition(offset: number): void\n  inspectByte(position?: number): Bytes[number]\n  inspectBytes(length: number, position?: number): Bytes\n  inspectUint8(position?: number): number\n  inspectUint16(position?: number): number\n  inspectUint24(position?: number): number\n  inspectUint32(position?: number): number\n  pushByte(byte: Bytes[number]): void\n  pushBytes(bytes: Bytes): void\n  pushUint8(value: number): void\n  pushUint16(value: number): void\n  pushUint24(value: number): void\n  pushUint32(value: number): void\n  readByte(): Bytes[number]\n  readBytes(length: number, size?: number): Bytes\n  readUint8(): number\n  readUint16(): number\n  readUint24(): number\n  readUint32(): number\n  setPosition(position: number): () => void\n  _touch(): void\n}\n\nconst staticCursor: Cursor = /*#__PURE__*/ {\n  bytes: new Uint8Array(),\n  dataView: new DataView(new ArrayBuffer(0)),\n  position: 0,\n  positionReadCount: new Map(),\n  recursiveReadCount: 0,\n  recursiveReadLimit: Number.POSITIVE_INFINITY,\n  assertReadLimit() {\n    if (this.recursiveReadCount >= this.recursiveReadLimit)\n      throw new RecursiveReadLimitExceededError({\n        count: this.recursiveReadCount + 1,\n        limit: this.recursiveReadLimit,\n      })\n  },\n  assertPosition(position) {\n    if (position < 0 || position > this.bytes.length - 1)\n      throw new PositionOutOfBoundsError({\n        length: this.bytes.length,\n        position,\n      })\n  },\n  decrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position - offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  getReadCount(position) {\n    return this.positionReadCount.get(position || this.position) || 0\n  },\n  incrementPosition(offset) {\n    if (offset < 0) throw new NegativeOffsetError({ offset })\n    const position = this.position + offset\n    this.assertPosition(position)\n    this.position = position\n  },\n  inspectByte(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]!\n  },\n  inspectBytes(length, position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + length - 1)\n    return this.bytes.subarray(position, position + length)\n  },\n  inspectUint8(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position)\n    return this.bytes[position]!\n  },\n  inspectUint16(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 1)\n    return this.dataView.getUint16(position)\n  },\n  inspectUint24(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 2)\n    return (\n      (this.dataView.getUint16(position) << 8) +\n      this.dataView.getUint8(position + 2)\n    )\n  },\n  inspectUint32(position_) {\n    const position = position_ ?? this.position\n    this.assertPosition(position + 3)\n    return this.dataView.getUint32(position)\n  },\n  pushByte(byte: Bytes[number]) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = byte\n    this.position++\n  },\n  pushBytes(bytes: Bytes) {\n    this.assertPosition(this.position + bytes.length - 1)\n    this.bytes.set(bytes, this.position)\n    this.position += bytes.length\n  },\n  pushUint8(value: number) {\n    this.assertPosition(this.position)\n    this.bytes[this.position] = value\n    this.position++\n  },\n  pushUint16(value: number) {\n    this.assertPosition(this.position + 1)\n    this.dataView.setUint16(this.position, value)\n    this.position += 2\n  },\n  pushUint24(value: number) {\n    this.assertPosition(this.position + 2)\n    this.dataView.setUint16(this.position, value >> 8)\n    this.dataView.setUint8(this.position + 2, value & ~4294967040)\n    this.position += 3\n  },\n  pushUint32(value: number) {\n    this.assertPosition(this.position + 3)\n    this.dataView.setUint32(this.position, value)\n    this.position += 4\n  },\n  readByte() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectByte()\n    this.position++\n    return value\n  },\n  readBytes(length, size) {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectBytes(length)\n    this.position += size ?? length\n    return value\n  },\n  readUint8() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint8()\n    this.position += 1\n    return value\n  },\n  readUint16() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint16()\n    this.position += 2\n    return value\n  },\n  readUint24() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint24()\n    this.position += 3\n    return value\n  },\n  readUint32() {\n    this.assertReadLimit()\n    this._touch()\n    const value = this.inspectUint32()\n    this.position += 4\n    return value\n  },\n  get remaining() {\n    return this.bytes.length - this.position\n  },\n  setPosition(position) {\n    const oldPosition = this.position\n    this.assertPosition(position)\n    this.position = position\n    return () => (this.position = oldPosition)\n  },\n  _touch() {\n    if (this.recursiveReadLimit === Number.POSITIVE_INFINITY) return\n    const count = this.getReadCount()\n    this.positionReadCount.set(this.position, count + 1)\n    if (count > 0) this.recursiveReadCount++\n  },\n}\n\n/** @internal */\nexport function create(\n  bytes: Bytes,\n  { recursiveReadLimit = 8_192 }: create.Config = {},\n): Cursor {\n  const cursor: Cursor = Object.create(staticCursor)\n  cursor.bytes = bytes\n  cursor.dataView = new DataView(\n    bytes.buffer,\n    bytes.byteOffset,\n    bytes.byteLength,\n  )\n  cursor.positionReadCount = new Map()\n  cursor.recursiveReadLimit = recursiveReadLimit\n  return cursor\n}\n\n/** @internal */\nexport declare namespace create {\n  type Config = { recursiveReadLimit?: number | undefined }\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/** @internal */\nexport class NegativeOffsetError extends Errors.BaseError {\n  override readonly name = 'Cursor.NegativeOffsetError'\n\n  constructor({ offset }: { offset: number }) {\n    super(`Offset \\`${offset}\\` cannot be negative.`)\n  }\n}\n\n/** @internal */\nexport class PositionOutOfBoundsError extends Errors.BaseError {\n  override readonly name = 'Cursor.PositionOutOfBoundsError'\n\n  constructor({ length, position }: { length: number; position: number }) {\n    super(\n      `Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`,\n    )\n  }\n}\n\n/** @internal */\nexport class RecursiveReadLimitExceededError extends Errors.BaseError {\n  override readonly name = 'Cursor.RecursiveReadLimitExceededError'\n\n  constructor({ count, limit }: { count: number; limit: number }) {\n    super(\n      `Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`,\n    )\n  }\n}\n", "import * as abitype from 'abitype'\nimport * as Address from './Address.js'\nimport * as Bytes from './Bytes.js'\nimport * as Errors from './Errors.js'\nimport * as Hex from './Hex.js'\nimport * as Solidity from './Solidity.js'\nimport * as internal from './internal/abiParameters.js'\nimport * as Cursor from './internal/cursor.js'\n\n/** Root type for ABI parameters. */\nexport type AbiParameters = readonly abitype.AbiParameter[]\n\n/** A parameter on an {@link ox#AbiParameters.AbiParameters}. */\nexport type Parameter = abitype.AbiParameter\n\n/** A packed ABI type. */\nexport type PackedAbiType =\n  | abitype.SolidityAddress\n  | abitype.SolidityBool\n  | abitype.SolidityBytes\n  | abitype.SolidityInt\n  | abitype.SolidityString\n  | abitype.SolidityArrayWithoutTuple\n\n/**\n * Decodes ABI-encoded data into its respective primitive values based on ABI Parameters.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.decode(\n *   AbiParameters.from(['string', 'uint', 'bool']),\n *   '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000',\n * )\n * // @log: ['wagmi', 420n, true]\n * ```\n *\n * @example\n * ### JSON Parameters\n *\n * You can pass **JSON ABI** Parameters:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.decode(\n *   [\n *     { name: 'x', type: 'string' },\n *     { name: 'y', type: 'uint' },\n *     { name: 'z', type: 'bool' },\n *   ],\n *   '0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001a4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000057761676d69000000000000000000000000000000000000000000000000000000',\n * )\n * // @log: ['wagmi', 420n, true]\n * ```\n *\n * @param parameters - The set of ABI parameters to decode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).\n * @param data - ABI encoded data.\n * @param options - Decoding options.\n * @returns Array of decoded values.\n */\nexport function decode<\n  const parameters extends AbiParameters,\n  as extends 'Object' | 'Array' = 'Array',\n>(\n  parameters: parameters,\n  data: Bytes.Bytes | Hex.Hex,\n  options?: decode.Options<as>,\n): decode.ReturnType<parameters, as>\n\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function decode(\n  parameters: AbiParameters,\n  data: Bytes.Bytes | Hex.Hex,\n  options: {\n    as?: 'Array' | 'Object' | undefined\n    checksumAddress?: boolean | undefined\n  } = {},\n): readonly unknown[] | Record<string, unknown> {\n  const { as = 'Array', checksumAddress = false } = options\n\n  const bytes = typeof data === 'string' ? Bytes.fromHex(data) : data\n  const cursor = Cursor.create(bytes)\n\n  if (Bytes.size(bytes) === 0 && parameters.length > 0)\n    throw new ZeroDataError()\n  if (Bytes.size(bytes) && Bytes.size(bytes) < 32)\n    throw new DataSizeTooSmallError({\n      data: typeof data === 'string' ? data : Hex.fromBytes(data),\n      parameters: parameters as readonly Parameter[],\n      size: Bytes.size(bytes),\n    })\n\n  let consumed = 0\n  const values: any = as === 'Array' ? [] : {}\n  for (let i = 0; i < parameters.length; ++i) {\n    const param = parameters[i] as Parameter\n    cursor.setPosition(consumed)\n    const [data, consumed_] = internal.decodeParameter(cursor, param, {\n      checksumAddress,\n      staticPosition: 0,\n    })\n    consumed += consumed_\n    if (as === 'Array') values.push(data)\n    else values[param.name ?? i] = data\n  }\n  return values\n}\n\nexport declare namespace decode {\n  type Options<as extends 'Object' | 'Array'> = {\n    /**\n     * Whether the decoded values should be returned as an `Object` or `Array`.\n     *\n     * @default \"Array\"\n     */\n    as?: as | 'Object' | 'Array' | undefined\n    /**\n     * Whether decoded addresses should be checksummed.\n     *\n     * @default false\n     */\n    checksumAddress?: boolean | undefined\n  }\n\n  type ReturnType<\n    parameters extends AbiParameters = AbiParameters,\n    as extends 'Object' | 'Array' = 'Array',\n  > = parameters extends readonly []\n    ? as extends 'Object'\n      ? {}\n      : []\n    : as extends 'Object'\n      ? internal.ToObject<parameters>\n      : internal.ToPrimitiveTypes<parameters>\n\n  type ErrorType =\n    | Bytes.fromHex.ErrorType\n    | internal.decodeParameter.ErrorType\n    | ZeroDataError\n    | DataSizeTooSmallError\n    | Errors.GlobalErrorType\n}\n\n/**\n * Encodes primitive values into ABI encoded data as per the [Application Binary Interface (ABI) Specification](https://docs.soliditylang.org/en/latest/abi-spec).\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.encode(\n *   AbiParameters.from(['string', 'uint', 'bool']),\n *   ['wagmi', 420n, true],\n * )\n * ```\n *\n * @example\n * ### JSON Parameters\n *\n * Specify **JSON ABI** Parameters as schema:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.encode(\n *   [\n *     { type: 'string', name: 'name' },\n *     { type: 'uint', name: 'age' },\n *     { type: 'bool', name: 'isOwner' },\n *   ],\n *   ['wagmi', 420n, true],\n * )\n * ```\n *\n * @param parameters - The set of ABI parameters to encode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).\n * @param values - The set of primitive values that correspond to the ABI types defined in `parameters`.\n * @returns ABI encoded data.\n */\nexport function encode<\n  const parameters extends AbiParameters | readonly unknown[],\n>(\n  parameters: parameters,\n  values: parameters extends AbiParameters\n    ? internal.ToPrimitiveTypes<parameters>\n    : never,\n  options?: encode.Options,\n): Hex.Hex {\n  const { checksumAddress = false } = options ?? {}\n\n  if (parameters.length !== values.length)\n    throw new LengthMismatchError({\n      expectedLength: parameters.length as number,\n      givenLength: values.length as any,\n    })\n  // Prepare the parameters to determine dynamic types to encode.\n  const preparedParameters = internal.prepareParameters({\n    checksumAddress,\n    parameters: parameters as readonly Parameter[],\n    values: values as any,\n  })\n  const data = internal.encode(preparedParameters)\n  if (data.length === 0) return '0x'\n  return data\n}\n\nexport declare namespace encode {\n  type ErrorType =\n    | LengthMismatchError\n    | internal.encode.ErrorType\n    | internal.prepareParameters.ErrorType\n    | Errors.GlobalErrorType\n\n  type Options = {\n    /**\n     * Whether addresses should be checked against their checksum.\n     *\n     * @default false\n     */\n    checksumAddress?: boolean | undefined\n  }\n}\n\n/**\n * Encodes an array of primitive values to a [packed ABI encoding](https://docs.soliditylang.org/en/latest/abi-spec.html#non-standard-packed-mode).\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const encoded = AbiParameters.encodePacked(\n *   ['address', 'string'],\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 'hello world'],\n * )\n * // @log: '0xd8da6bf26964af9d7eed9e03e53415d37aa9604568656c6c6f20776f726c64'\n * ```\n *\n * @param types - Set of ABI types to pack encode.\n * @param values - The set of primitive values that correspond to the ABI types defined in `types`.\n * @returns The encoded packed data.\n */\nexport function encodePacked<\n  const packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n>(types: packedAbiTypes, values: encodePacked.Values<packedAbiTypes>): Hex.Hex {\n  if (types.length !== values.length)\n    throw new LengthMismatchError({\n      expectedLength: types.length as number,\n      givenLength: values.length as number,\n    })\n\n  const data: Hex.Hex[] = []\n  for (let i = 0; i < (types as unknown[]).length; i++) {\n    const type = types[i]\n    const value = values[i]\n    data.push(encodePacked.encode(type, value))\n  }\n  return Hex.concat(...data)\n}\n\nexport namespace encodePacked {\n  export type ErrorType =\n    | Hex.concat.ErrorType\n    | LengthMismatchError\n    | Errors.GlobalErrorType\n\n  export type Values<\n    packedAbiTypes extends readonly PackedAbiType[] | readonly unknown[],\n  > = {\n    [key in keyof packedAbiTypes]: packedAbiTypes[key] extends abitype.AbiType\n      ? abitype.AbiParameterToPrimitiveType<{ type: packedAbiTypes[key] }>\n      : unknown\n  }\n\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  export function encode<const packedAbiType extends PackedAbiType | unknown>(\n    type: packedAbiType,\n    value: Values<[packedAbiType]>[0],\n    isArray = false,\n  ): Hex.Hex {\n    if (type === 'address') {\n      const address = value as Address.Address\n      Address.assert(address)\n      return Hex.padLeft(\n        address.toLowerCase() as Hex.Hex,\n        isArray ? 32 : 0,\n      ) as Address.Address\n    }\n    if (type === 'string') return Hex.fromString(value as string)\n    if (type === 'bytes') return value as Hex.Hex\n    if (type === 'bool')\n      return Hex.padLeft(Hex.fromBoolean(value as boolean), isArray ? 32 : 1)\n\n    const intMatch = (type as string).match(Solidity.integerRegex)\n    if (intMatch) {\n      const [_type, baseType, bits = '256'] = intMatch\n      const size = Number.parseInt(bits) / 8\n      return Hex.fromNumber(value as number, {\n        size: isArray ? 32 : size,\n        signed: baseType === 'int',\n      })\n    }\n\n    const bytesMatch = (type as string).match(Solidity.bytesRegex)\n    if (bytesMatch) {\n      const [_type, size] = bytesMatch\n      if (Number.parseInt(size!) !== ((value as Hex.Hex).length - 2) / 2)\n        throw new BytesSizeMismatchError({\n          expectedSize: Number.parseInt(size!),\n          value: value as Hex.Hex,\n        })\n      return Hex.padRight(value as Hex.Hex, isArray ? 32 : 0) as Hex.Hex\n    }\n\n    const arrayMatch = (type as string).match(Solidity.arrayRegex)\n    if (arrayMatch && Array.isArray(value)) {\n      const [_type, childType] = arrayMatch\n      const data: Hex.Hex[] = []\n      for (let i = 0; i < value.length; i++) {\n        data.push(encode(childType, value[i], true))\n      }\n      if (data.length === 0) return '0x'\n      return Hex.concat(...data)\n    }\n\n    throw new InvalidTypeError(type as string)\n  }\n}\n\n/**\n * Formats {@link ox#AbiParameters.AbiParameters} into **Human Readable ABI Parameters**.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const formatted = AbiParameters.format([\n *   {\n *     name: 'spender',\n *     type: 'address',\n *   },\n *   {\n *     name: 'amount',\n *     type: 'uint256',\n *   },\n * ])\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param parameters - The ABI Parameters to format.\n * @returns The formatted ABI Parameters  .\n */\nexport function format<\n  const parameters extends readonly [\n    Parameter | abitype.AbiEventParameter,\n    ...(readonly (Parameter | abitype.AbiEventParameter)[]),\n  ],\n>(\n  parameters:\n    | parameters\n    | readonly [\n        Parameter | abitype.AbiEventParameter,\n        ...(readonly (Parameter | abitype.AbiEventParameter)[]),\n      ],\n): abitype.FormatAbiParameters<parameters> {\n  return abitype.formatAbiParameters(parameters)\n}\n\nexport declare namespace format {\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Parses arbitrary **JSON ABI Parameters** or **Human Readable ABI Parameters** into typed {@link ox#AbiParameters.AbiParameters}.\n *\n * @example\n * ### JSON Parameters\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from([\n *   {\n *     name: 'spender',\n *     type: 'address',\n *   },\n *   {\n *     name: 'amount',\n *     type: 'uint256',\n *   },\n * ])\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable Parameters\n *\n * Human Readable ABI Parameters can be parsed into a typed {@link ox#AbiParameters.AbiParameters}:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from('address spender, uint256 amount')\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from([\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\n *   'Foo foo, address bar',\n * ])\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param parameters - The ABI Parameters to parse.\n * @returns The typed ABI Parameters.\n */\nexport function from<\n  const parameters extends AbiParameters | string | readonly string[],\n>(\n  parameters: parameters | AbiParameters | string | readonly string[],\n): from.ReturnType<parameters> {\n  if (Array.isArray(parameters) && typeof parameters[0] === 'string')\n    return abitype.parseAbiParameters(parameters) as never\n  if (typeof parameters === 'string')\n    return abitype.parseAbiParameters(parameters) as never\n  return parameters as never\n}\n\nexport declare namespace from {\n  type ReturnType<\n    parameters extends AbiParameters | string | readonly string[],\n  > = parameters extends string\n    ? abitype.ParseAbiParameters<parameters>\n    : parameters extends readonly string[]\n      ? abitype.ParseAbiParameters<parameters>\n      : parameters\n\n  type ErrorType = Errors.GlobalErrorType\n}\n\n/**\n * Throws when the data size is too small for the given parameters.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x010f')\n * //                                             ↑ ❌ 2 bytes\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\n * // @error: Params: (uint256)\n * // @error: Data:   0x010f (2 bytes)\n * ```\n *\n * ### Solution\n *\n * Pass a valid data size.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                                             ↑ ✅ 32 bytes\n * ```\n */\nexport class DataSizeTooSmallError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.DataSizeTooSmallError'\n  constructor({\n    data,\n    parameters,\n    size,\n  }: { data: Hex.Hex; parameters: readonly Parameter[]; size: number }) {\n    super(`Data size of ${size} bytes is too small for given parameters.`, {\n      metaMessages: [\n        `Params: (${abitype.formatAbiParameters(parameters as readonly [Parameter])})`,\n        `Data:   ${data} (${size} bytes)`,\n      ],\n    })\n  }\n}\n\n/**\n * Throws when zero data is provided, but data is expected.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x')\n * //                                           ↑ ❌ zero data\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\n * // @error: Params: (uint256)\n * // @error: Data:   0x010f (2 bytes)\n * ```\n *\n * ### Solution\n *\n * Pass valid data.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                                             ↑ ✅ 32 bytes\n * ```\n */\nexport class ZeroDataError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.ZeroDataError'\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.')\n  }\n}\n\n/**\n * The length of the array value does not match the length specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from('uint256[3]'), [[69n, 420n]])\n * //                                               ↑ expected: 3  ↑ ❌ length: 2\n * // @error: AbiParameters.ArrayLengthMismatchError: ABI encoding array length mismatch\n * // @error: for type `uint256[3]`. Expected: `3`. Given: `2`.\n * ```\n *\n * ### Solution\n *\n * Pass an array of the correct length.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [[69n, 420n, 69n]])\n * //                                                         ↑ ✅ length: 3\n * ```\n */\nexport class ArrayLengthMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.ArrayLengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      `Array length mismatch for type \\`${type}\\`. Expected: \\`${expectedLength}\\`. Given: \\`${givenLength}\\`.`,\n    )\n  }\n}\n\n/**\n * The size of the bytes value does not match the size specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from('bytes8'), [['0xdeadbeefdeadbeefdeadbeef']])\n * //                                            ↑ expected: 8 bytes  ↑ ❌ size: 12 bytes\n * // @error: BytesSizeMismatchError: Size of bytes \"0xdeadbeefdeadbeefdeadbeef\"\n * // @error: (bytes12) does not match expected size (bytes8).\n * ```\n *\n * ### Solution\n *\n * Pass a bytes value of the correct size.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['bytes8']), ['0xdeadbeefdeadbeef'])\n * //                                                       ↑ ✅ size: 8 bytes\n * ```\n */\nexport class BytesSizeMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.BytesSizeMismatchError'\n  constructor({\n    expectedSize,\n    value,\n  }: { expectedSize: number; value: Hex.Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${Hex.size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n    )\n  }\n}\n\n/**\n * The length of the values to encode does not match the length of the ABI parameters.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['string', 'uint256']), ['hello'])\n * // @error: LengthMismatchError: ABI encoding params/values length mismatch.\n * // @error: Expected length (params): 2\n * // @error: Given length (values): 1\n * ```\n *\n * ### Solution\n *\n * Pass the correct number of values to encode.\n *\n * ### Solution\n *\n * Pass a [valid ABI type](https://docs.soliditylang.org/en/develop/abi-spec.html#types).\n */\nexport class LengthMismatchError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.LengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding parameters/values length mismatch.',\n        `Expected length (parameters): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n    )\n  }\n}\n\n/**\n * The value provided is not a valid array as specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [69])\n * ```\n *\n * ### Solution\n *\n * Pass an array value.\n */\nexport class InvalidArrayError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.InvalidArrayError'\n  constructor(value: unknown) {\n    super(`Value \\`${value}\\` is not a valid array.`)\n  }\n}\n\n/**\n * Throws when the ABI parameter type is invalid.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'lol' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                             ↑ ❌ invalid type\n * // @error: AbiParameters.InvalidTypeError: Type `lol` is not a valid ABI Type.\n * ```\n */\nexport class InvalidTypeError extends Errors.BaseError {\n  override readonly name = 'AbiParameters.InvalidTypeError'\n  constructor(type: string) {\n    super(`Type \\`${type}\\` is not a valid ABI Type.`)\n  }\n}\n", "export function utf8Count(str: string): number {\n  const strLength = str.length;\n\n  let byteLength = 0;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\n\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\n  const strLength = str.length;\n  let offset = outputOffset;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      }\n    }\n\n    output[offset++] = (value & 0x3f) | 0x80;\n  }\n}\n\n// TextEncoder and TextDecoder are standardized in whatwg encoding:\n// https://encoding.spec.whatwg.org/\n// and available in all the modern browsers:\n// https://caniuse.com/textencoder\n// They are available in Node.js since v12 LTS as well:\n// https://nodejs.org/api/globals.html#textencoder\n\nconst sharedTextEncoder = new TextEncoder();\n\n// This threshold should be determined by benchmarking, which might vary in engines and input data.\n// Run `npx ts-node benchmark/encode-string.ts` for details.\nconst TEXT_ENCODER_THRESHOLD = 50;\n\nexport function utf8EncodeTE(str: string, output: Uint8Array, outputOffset: number): void {\n  sharedTextEncoder.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport function utf8Encode(str: string, output: Uint8Array, outputOffset: number): void {\n  if (str.length > TEXT_ENCODER_THRESHOLD) {\n    utf8EncodeTE(str, output, outputOffset);\n  } else {\n    utf8EncodeJs(str, output, outputOffset);\n  }\n}\n\nconst CHUNK_SIZE = 0x1_000;\n\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  let offset = inputOffset;\n  const end = offset + byteLength;\n\n  const units: Array<number> = [];\n  let result = \"\";\n  while (offset < end) {\n    const byte1 = bytes[offset++]!;\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      const byte4 = bytes[offset++]! & 0x3f;\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n        unit = 0xdc00 | (unit & 0x3ff);\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode(...units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode(...units);\n  }\n\n  return result;\n}\n\nconst sharedTextDecoder = new TextDecoder();\n\n// This threshold should be determined by benchmarking, which might vary in engines and input data.\n// Run `npx ts-node benchmark/decode-string.ts` for details.\nconst TEXT_DECODER_THRESHOLD = 200;\n\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  return sharedTextDecoder.decode(stringBytes);\n}\n\nexport function utf8Decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  if (byteLength > TEXT_DECODER_THRESHOLD) {\n    return utf8DecodeTD(bytes, inputOffset, byteLength);\n  } else {\n    return utf8DecodeJs(bytes, inputOffset, byteLength);\n  }\n}\n", "/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nexport class ExtData {\n  readonly type: number;\n  readonly data: Uint8Array | ((pos: number) => Uint8Array);\n\n  constructor(type: number, data: Uint8Array | ((pos: number) => Uint8Array)) {\n    this.type = type;\n    this.data = data;\n  }\n}\n", "export class DecodeError extends Error {\n  constructor(message: string) {\n    super(message);\n\n    // fix the prototype chain in a cross-platform way\n    const proto: typeof DecodeError.prototype = Object.create(DecodeError.prototype);\n    Object.setPrototypeOf(this, proto);\n\n    Object.defineProperty(this, \"name\", {\n      configurable: true,\n      enumerable: false,\n      value: DecodeError.name,\n    });\n  }\n}\n", "// Integer Utility\n\nexport const UINT32_MAX = 0xffff_ffff;\n\n// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\n\nexport function setUint64(view: DataView, offset: number, value: number): void {\n  const high = value / 0x1_0000_0000;\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setInt64(view: DataView, offset: number, value: number): void {\n  const high = Math.floor(value / 0x1_0000_0000);\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function getInt64(view: DataView, offset: number): number {\n  const high = view.getInt32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n\nexport function getUint64(view: DataView, offset: number): number {\n  const high = view.getUint32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n", "// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { DecodeError } from \"./DecodeError.ts\";\nimport { getInt64, setInt64 } from \"./utils/int.ts\";\n\nexport const EXT_TIMESTAMP = -1;\n\nexport type TimeSpec = {\n  sec: number;\n  nsec: number;\n};\n\nconst TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nconst TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n\nexport function encodeTimeSpecToTimestamp({ sec, nsec }: TimeSpec): Uint8Array {\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n    // Here sec >= 0 && nsec >= 0\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n      // timestamp 32 = { sec32 (unsigned) }\n      const rv = new Uint8Array(4);\n      const view = new DataView(rv.buffer);\n      view.setUint32(0, sec);\n      return rv;\n    } else {\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n      const secHigh = sec / 0x100000000;\n      const secLow = sec & 0xffffffff;\n      const rv = new Uint8Array(8);\n      const view = new DataView(rv.buffer);\n      // nsec30 | secHigh2\n      view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n      // secLow32\n      view.setUint32(4, secLow);\n      return rv;\n    }\n  } else {\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n    const rv = new Uint8Array(12);\n    const view = new DataView(rv.buffer);\n    view.setUint32(0, nsec);\n    setInt64(view, 4, sec);\n    return rv;\n  }\n}\n\nexport function encodeDateToTimeSpec(date: Date): TimeSpec {\n  const msec = date.getTime();\n  const sec = Math.floor(msec / 1e3);\n  const nsec = (msec - sec * 1e3) * 1e6;\n\n  // Normalizes { sec, nsec } to ensure nsec is unsigned.\n  const nsecInSec = Math.floor(nsec / 1e9);\n  return {\n    sec: sec + nsecInSec,\n    nsec: nsec - nsecInSec * 1e9,\n  };\n}\n\nexport function encodeTimestampExtension(object: unknown): Uint8Array | null {\n  if (object instanceof Date) {\n    const timeSpec = encodeDateToTimeSpec(object);\n    return encodeTimeSpecToTimestamp(timeSpec);\n  } else {\n    return null;\n  }\n}\n\nexport function decodeTimestampToTimeSpec(data: Uint8Array): TimeSpec {\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n  // data may be 32, 64, or 96 bits\n  switch (data.byteLength) {\n    case 4: {\n      // timestamp 32 = { sec32 }\n      const sec = view.getUint32(0);\n      const nsec = 0;\n      return { sec, nsec };\n    }\n    case 8: {\n      // timestamp 64 = { nsec30, sec34 }\n      const nsec30AndSecHigh2 = view.getUint32(0);\n      const secLow32 = view.getUint32(4);\n      const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n      const nsec = nsec30AndSecHigh2 >>> 2;\n      return { sec, nsec };\n    }\n    case 12: {\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n\n      const sec = getInt64(view, 4);\n      const nsec = view.getUint32(0);\n      return { sec, nsec };\n    }\n    default:\n      throw new DecodeError(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${data.length}`);\n  }\n}\n\nexport function decodeTimestampExtension(data: Uint8Array): Date {\n  const timeSpec = decodeTimestampToTimeSpec(data);\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\n\nexport const timestampExtension = {\n  type: EXT_TIMESTAMP,\n  encode: encodeTimestampExtension,\n  decode: decodeTimestampExtension,\n};\n", "// ExtensionCodec to handle MessagePack extensions\n\nimport { ExtData } from \"./ExtData.ts\";\nimport { timestampExtension } from \"./timestamp.ts\";\n\nexport type ExtensionDecoderType<ContextType> = (\n  data: Uint8Array,\n  extensionType: number,\n  context: ContextType,\n) => unknown;\n\nexport type ExtensionEncoderType<ContextType> = (\n  input: unknown,\n  context: ContextType,\n) => Uint8Array | ((dataPos: number) => Uint8Array) | null;\n\n// immutable interface to ExtensionCodec\nexport type ExtensionCodecType<ContextType> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n  tryToEncode(object: unknown, context: ContextType): ExtData | null;\n  decode(data: Uint8Array, extType: number, context: ContextType): unknown;\n};\n\nexport class ExtensionCodec<ContextType = undefined> implements ExtensionCodecType<ContextType> {\n  public static readonly defaultCodec: ExtensionCodecType<undefined> = new ExtensionCodec();\n\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\n  // this will make type errors a lot more clear\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n\n  // built-in extensions\n  private readonly builtInEncoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly builtInDecoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  // custom extensions\n  private readonly encoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly decoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  public constructor() {\n    this.register(timestampExtension);\n  }\n\n  public register({\n    type,\n    encode,\n    decode,\n  }: {\n    type: number;\n    encode: ExtensionEncoderType<ContextType>;\n    decode: ExtensionDecoderType<ContextType>;\n  }): void {\n    if (type >= 0) {\n      // custom extensions\n      this.encoders[type] = encode;\n      this.decoders[type] = decode;\n    } else {\n      // built-in extensions\n      const index = -1 - type;\n      this.builtInEncoders[index] = encode;\n      this.builtInDecoders[index] = decode;\n    }\n  }\n\n  public tryToEncode(object: unknown, context: ContextType): ExtData | null {\n    // built-in extensions\n    for (let i = 0; i < this.builtInEncoders.length; i++) {\n      const encodeExt = this.builtInEncoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = -1 - i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    // custom extensions\n    for (let i = 0; i < this.encoders.length; i++) {\n      const encodeExt = this.encoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    if (object instanceof ExtData) {\n      // to keep ExtData as is\n      return object;\n    }\n    return null;\n  }\n\n  public decode(data: Uint8Array, type: number, context: ContextType): unknown {\n    const decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n    if (decodeExt) {\n      return decodeExt(data, type, context);\n    } else {\n      // decode() does not fail, returns ExtData instead.\n      return new ExtData(type, data);\n    }\n  }\n}\n", "function isArrayBufferLike(buffer: unknown): buffer is ArrayBufferLike {\n  return (\n    buffer instanceof ArrayBuffer || (typeof SharedArrayBuffer !== \"undefined\" && buffer instanceof SharedArrayBuffer)\n  );\n}\n\nexport function ensureUint8Array(\n  buffer: ArrayLike<number> | Uint8Array<ArrayBufferLike> | ArrayBufferView | ArrayBufferLike,\n): Uint8Array<ArrayBufferLike> {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (isArrayBufferLike(buffer)) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n", "import { utf8Count, utf8Encode } from \"./utils/utf8.ts\";\nimport { ExtensionCodec } from \"./ExtensionCodec.ts\";\nimport { setInt64, setUint64 } from \"./utils/int.ts\";\nimport { ensureUint8Array } from \"./utils/typedArrays.ts\";\nimport type { ExtData } from \"./ExtData.ts\";\nimport type { ContextOf } from \"./context.ts\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec.ts\";\n\nexport const DEFAULT_MAX_DEPTH = 100;\nexport const DEFAULT_INITIAL_BUFFER_SIZE = 2048;\n\nexport type EncoderOptions<ContextType = undefined> = Partial<\n  Readonly<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Encodes bigint as Int64 or Uint64 if it's set to true.\n     * {@link forceIntegerToFloat} does not affect bigint.\n     * Depends on ES2020's {@link DataView#setBigInt64} and\n     * {@link DataView#setBigUint64}.\n     *\n     * Defaults to false.\n     */\n    useBigInt64: boolean;\n\n    /**\n     * The maximum depth in nested objects and arrays.\n     *\n     * Defaults to 100.\n     */\n    maxDepth: number;\n\n    /**\n     * The initial size of the internal buffer.\n     *\n     * Defaults to 2048.\n     */\n    initialBufferSize: number;\n\n    /**\n     * If `true`, the keys of an object is sorted. In other words, the encoded\n     * binary is canonical and thus comparable to another encoded binary.\n     *\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\n     */\n    sortKeys: boolean;\n    /**\n     * If `true`, non-integer numbers are encoded in float32, not in float64 (the default).\n     *\n     * Only use it if precisions don't matter.\n     *\n     * Defaults to `false`.\n     */\n    forceFloat32: boolean;\n\n    /**\n     * If `true`, an object property with `undefined` value are ignored.\n     * e.g. `{ foo: undefined }` will be encoded as `{}`, as `JSON.stringify()` does.\n     *\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\n     */\n    ignoreUndefined: boolean;\n\n    /**\n     * If `true`, integer numbers are encoded as floating point numbers,\n     * with the `forceFloat32` option taken into account.\n     *\n     * Defaults to `false`.\n     */\n    forceIntegerToFloat: boolean;\n  }>\n> &\n  ContextOf<ContextType>;\n\nexport class Encoder<ContextType = undefined> {\n  private readonly extensionCodec: ExtensionCodecType<ContextType>;\n  private readonly context: ContextType;\n  private readonly useBigInt64: boolean;\n  private readonly maxDepth: number;\n  private readonly initialBufferSize: number;\n  private readonly sortKeys: boolean;\n  private readonly forceFloat32: boolean;\n  private readonly ignoreUndefined: boolean;\n  private readonly forceIntegerToFloat: boolean;\n\n  private pos: number;\n  private view: DataView;\n  private bytes: Uint8Array;\n\n  private entered = false;\n\n  public constructor(options?: EncoderOptions<ContextType>) {\n    this.extensionCodec = options?.extensionCodec ?? (ExtensionCodec.defaultCodec as ExtensionCodecType<ContextType>);\n    this.context = (options as { context: ContextType } | undefined)?.context as ContextType; // needs a type assertion because EncoderOptions has no context property when ContextType is undefined\n\n    this.useBigInt64 = options?.useBigInt64 ?? false;\n    this.maxDepth = options?.maxDepth ?? DEFAULT_MAX_DEPTH;\n    this.initialBufferSize = options?.initialBufferSize ?? DEFAULT_INITIAL_BUFFER_SIZE;\n    this.sortKeys = options?.sortKeys ?? false;\n    this.forceFloat32 = options?.forceFloat32 ?? false;\n    this.ignoreUndefined = options?.ignoreUndefined ?? false;\n    this.forceIntegerToFloat = options?.forceIntegerToFloat ?? false;\n\n    this.pos = 0;\n    this.view = new DataView(new ArrayBuffer(this.initialBufferSize));\n    this.bytes = new Uint8Array(this.view.buffer);\n  }\n\n  private clone() {\n    // Because of slightly special argument `context`,\n    // type assertion is needed.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return new Encoder<ContextType>({\n      extensionCodec: this.extensionCodec,\n      context: this.context,\n      useBigInt64: this.useBigInt64,\n      maxDepth: this.maxDepth,\n      initialBufferSize: this.initialBufferSize,\n      sortKeys: this.sortKeys,\n      forceFloat32: this.forceFloat32,\n      ignoreUndefined: this.ignoreUndefined,\n      forceIntegerToFloat: this.forceIntegerToFloat,\n    } as any);\n  }\n\n  private reinitializeState() {\n    this.pos = 0;\n  }\n\n  /**\n   * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.\n   *\n   * @returns Encodes the object and returns a shared reference the encoder's internal buffer.\n   */\n  public encodeSharedRef(object: unknown): Uint8Array {\n    if (this.entered) {\n      const instance = this.clone();\n      return instance.encodeSharedRef(object);\n    }\n\n    try {\n      this.entered = true;\n\n      this.reinitializeState();\n      this.doEncode(object, 1);\n      return this.bytes.subarray(0, this.pos);\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  /**\n   * @returns Encodes the object and returns a copy of the encoder's internal buffer.\n   */\n  public encode(object: unknown): Uint8Array {\n    if (this.entered) {\n      const instance = this.clone();\n      return instance.encode(object);\n    }\n\n    try {\n      this.entered = true;\n\n      this.reinitializeState();\n      this.doEncode(object, 1);\n      return this.bytes.slice(0, this.pos);\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  private doEncode(object: unknown, depth: number): void {\n    if (depth > this.maxDepth) {\n      throw new Error(`Too deep objects in depth ${depth}`);\n    }\n\n    if (object == null) {\n      this.encodeNil();\n    } else if (typeof object === \"boolean\") {\n      this.encodeBoolean(object);\n    } else if (typeof object === \"number\") {\n      if (!this.forceIntegerToFloat) {\n        this.encodeNumber(object);\n      } else {\n        this.encodeNumberAsFloat(object);\n      }\n    } else if (typeof object === \"string\") {\n      this.encodeString(object);\n    } else if (this.useBigInt64 && typeof object === \"bigint\") {\n      this.encodeBigInt64(object);\n    } else {\n      this.encodeObject(object, depth);\n    }\n  }\n\n  private ensureBufferSizeToWrite(sizeToWrite: number) {\n    const requiredSize = this.pos + sizeToWrite;\n\n    if (this.view.byteLength < requiredSize) {\n      this.resizeBuffer(requiredSize * 2);\n    }\n  }\n\n  private resizeBuffer(newSize: number) {\n    const newBuffer = new ArrayBuffer(newSize);\n    const newBytes = new Uint8Array(newBuffer);\n    const newView = new DataView(newBuffer);\n\n    newBytes.set(this.bytes);\n\n    this.view = newView;\n    this.bytes = newBytes;\n  }\n\n  private encodeNil() {\n    this.writeU8(0xc0);\n  }\n\n  private encodeBoolean(object: boolean) {\n    if (object === false) {\n      this.writeU8(0xc2);\n    } else {\n      this.writeU8(0xc3);\n    }\n  }\n\n  private encodeNumber(object: number): void {\n    if (!this.forceIntegerToFloat && Number.isSafeInteger(object)) {\n      if (object >= 0) {\n        if (object < 0x80) {\n          // positive fixint\n          this.writeU8(object);\n        } else if (object < 0x100) {\n          // uint 8\n          this.writeU8(0xcc);\n          this.writeU8(object);\n        } else if (object < 0x10000) {\n          // uint 16\n          this.writeU8(0xcd);\n          this.writeU16(object);\n        } else if (object < 0x100000000) {\n          // uint 32\n          this.writeU8(0xce);\n          this.writeU32(object);\n        } else if (!this.useBigInt64) {\n          // uint 64\n          this.writeU8(0xcf);\n          this.writeU64(object);\n        } else {\n          this.encodeNumberAsFloat(object);\n        }\n      } else {\n        if (object >= -0x20) {\n          // negative fixint\n          this.writeU8(0xe0 | (object + 0x20));\n        } else if (object >= -0x80) {\n          // int 8\n          this.writeU8(0xd0);\n          this.writeI8(object);\n        } else if (object >= -0x8000) {\n          // int 16\n          this.writeU8(0xd1);\n          this.writeI16(object);\n        } else if (object >= -0x80000000) {\n          // int 32\n          this.writeU8(0xd2);\n          this.writeI32(object);\n        } else if (!this.useBigInt64) {\n          // int 64\n          this.writeU8(0xd3);\n          this.writeI64(object);\n        } else {\n          this.encodeNumberAsFloat(object);\n        }\n      }\n    } else {\n      this.encodeNumberAsFloat(object);\n    }\n  }\n\n  private encodeNumberAsFloat(object: number): void {\n    if (this.forceFloat32) {\n      // float 32\n      this.writeU8(0xca);\n      this.writeF32(object);\n    } else {\n      // float 64\n      this.writeU8(0xcb);\n      this.writeF64(object);\n    }\n  }\n\n  private encodeBigInt64(object: bigint): void {\n    if (object >= BigInt(0)) {\n      // uint 64\n      this.writeU8(0xcf);\n      this.writeBigUint64(object);\n    } else {\n      // int 64\n      this.writeU8(0xd3);\n      this.writeBigInt64(object);\n    }\n  }\n\n  private writeStringHeader(byteLength: number) {\n    if (byteLength < 32) {\n      // fixstr\n      this.writeU8(0xa0 + byteLength);\n    } else if (byteLength < 0x100) {\n      // str 8\n      this.writeU8(0xd9);\n      this.writeU8(byteLength);\n    } else if (byteLength < 0x10000) {\n      // str 16\n      this.writeU8(0xda);\n      this.writeU16(byteLength);\n    } else if (byteLength < 0x100000000) {\n      // str 32\n      this.writeU8(0xdb);\n      this.writeU32(byteLength);\n    } else {\n      throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);\n    }\n  }\n\n  private encodeString(object: string) {\n    const maxHeaderSize = 1 + 4;\n\n    const byteLength = utf8Count(object);\n    this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n    this.writeStringHeader(byteLength);\n    utf8Encode(object, this.bytes, this.pos);\n    this.pos += byteLength;\n  }\n\n  private encodeObject(object: unknown, depth: number) {\n    // try to encode objects with custom codec first of non-primitives\n    const ext = this.extensionCodec.tryToEncode(object, this.context);\n    if (ext != null) {\n      this.encodeExtension(ext);\n    } else if (Array.isArray(object)) {\n      this.encodeArray(object, depth);\n    } else if (ArrayBuffer.isView(object)) {\n      this.encodeBinary(object);\n    } else if (typeof object === \"object\") {\n      this.encodeMap(object as Record<string, unknown>, depth);\n    } else {\n      // symbol, function and other special object come here unless extensionCodec handles them.\n      throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);\n    }\n  }\n\n  private encodeBinary(object: ArrayBufferView) {\n    const size = object.byteLength;\n    if (size < 0x100) {\n      // bin 8\n      this.writeU8(0xc4);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // bin 16\n      this.writeU8(0xc5);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // bin 32\n      this.writeU8(0xc6);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large binary: ${size}`);\n    }\n    const bytes = ensureUint8Array(object);\n    this.writeU8a(bytes);\n  }\n\n  private encodeArray(object: Array<unknown>, depth: number) {\n    const size = object.length;\n    if (size < 16) {\n      // fixarray\n      this.writeU8(0x90 + size);\n    } else if (size < 0x10000) {\n      // array 16\n      this.writeU8(0xdc);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // array 32\n      this.writeU8(0xdd);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large array: ${size}`);\n    }\n    for (const item of object) {\n      this.doEncode(item, depth + 1);\n    }\n  }\n\n  private countWithoutUndefined(object: Record<string, unknown>, keys: ReadonlyArray<string>): number {\n    let count = 0;\n\n    for (const key of keys) {\n      if (object[key] !== undefined) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  private encodeMap(object: Record<string, unknown>, depth: number) {\n    const keys = Object.keys(object);\n    if (this.sortKeys) {\n      keys.sort();\n    }\n\n    const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n\n    if (size < 16) {\n      // fixmap\n      this.writeU8(0x80 + size);\n    } else if (size < 0x10000) {\n      // map 16\n      this.writeU8(0xde);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // map 32\n      this.writeU8(0xdf);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large map object: ${size}`);\n    }\n\n    for (const key of keys) {\n      const value = object[key];\n\n      if (!(this.ignoreUndefined && value === undefined)) {\n        this.encodeString(key);\n        this.doEncode(value, depth + 1);\n      }\n    }\n  }\n\n  private encodeExtension(ext: ExtData) {\n    if (typeof ext.data === \"function\") {\n      const data = ext.data(this.pos + 6);\n      const size = data.length;\n\n      if (size >= 0x100000000) {\n        throw new Error(`Too large extension object: ${size}`);\n      }\n\n      this.writeU8(0xc9);\n      this.writeU32(size);\n      this.writeI8(ext.type);\n      this.writeU8a(data);\n      return;\n    }\n\n    const size = ext.data.length;\n    if (size === 1) {\n      // fixext 1\n      this.writeU8(0xd4);\n    } else if (size === 2) {\n      // fixext 2\n      this.writeU8(0xd5);\n    } else if (size === 4) {\n      // fixext 4\n      this.writeU8(0xd6);\n    } else if (size === 8) {\n      // fixext 8\n      this.writeU8(0xd7);\n    } else if (size === 16) {\n      // fixext 16\n      this.writeU8(0xd8);\n    } else if (size < 0x100) {\n      // ext 8\n      this.writeU8(0xc7);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // ext 16\n      this.writeU8(0xc8);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // ext 32\n      this.writeU8(0xc9);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large extension object: ${size}`);\n    }\n    this.writeI8(ext.type);\n    this.writeU8a(ext.data);\n  }\n\n  private writeU8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setUint8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU8a(values: ArrayLike<number>) {\n    const size = values.length;\n    this.ensureBufferSizeToWrite(size);\n\n    this.bytes.set(values, this.pos);\n    this.pos += size;\n  }\n\n  private writeI8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setInt8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setUint16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeI16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setInt16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeU32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setUint32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeI32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setInt32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setFloat32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    this.view.setFloat64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeU64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setUint64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeI64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeBigUint64(value: bigint) {\n    this.ensureBufferSizeToWrite(8);\n\n    this.view.setBigUint64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeBigInt64(value: bigint) {\n    this.ensureBufferSizeToWrite(8);\n\n    this.view.setBigInt64(this.pos, value);\n    this.pos += 8;\n  }\n}\n", "import { Encoder } from \"./Encoder.ts\";\nimport type { EncoderOptions } from \"./Encoder.ts\";\nimport type { SplitUndefined } from \"./context.ts\";\n\n/**\n * It encodes `value` in the MessagePack format and\n * returns a byte buffer.\n *\n * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.\n */\nexport function encode<ContextType = undefined>(\n  value: unknown,\n  options?: EncoderOptions<SplitUndefined<ContextType>>,\n): Uint8Array {\n  const encoder = new Encoder(options);\n  return encoder.encodeSharedRef(value);\n}\n", "export function prettyByte(byte: number): string {\n  return `${byte < 0 ? \"-\" : \"\"}0x${Math.abs(byte).toString(16).padStart(2, \"0\")}`;\n}\n", "import { utf8DecodeJs } from \"./utils/utf8.ts\";\n\nconst DEFAULT_MAX_KEY_LENGTH = 16;\nconst DEFAULT_MAX_LENGTH_PER_KEY = 16;\n\nexport interface KeyDecoder {\n  canBeCached(byteLength: number): boolean;\n  decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string;\n}\ninterface KeyCacheRecord {\n  readonly bytes: Uint8Array;\n  readonly str: string;\n}\n\nexport class CachedKeyDecoder implements KeyDecoder {\n  hit = 0;\n  miss = 0;\n  private readonly caches: Array<Array<KeyCacheRecord>>;\n  readonly maxKeyLength: number;\n  readonly maxLengthPerKey: number;\n\n  constructor(maxKeyLength = DEFAULT_MAX_KEY_LENGTH, maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY) {\n    this.maxKeyLength = maxKeyLength;\n    this.maxLengthPerKey = maxLengthPerKey;\n\n    // avoid `new Array(N)`, which makes a sparse array,\n    // because a sparse array is typically slower than a non-sparse array.\n    this.caches = [];\n    for (let i = 0; i < this.maxKeyLength; i++) {\n      this.caches.push([]);\n    }\n  }\n\n  public canBeCached(byteLength: number): boolean {\n    return byteLength > 0 && byteLength <= this.maxKeyLength;\n  }\n\n  private find(bytes: Uint8Array, inputOffset: number, byteLength: number): string | null {\n    const records = this.caches[byteLength - 1]!;\n\n    FIND_CHUNK: for (const record of records) {\n      const recordBytes = record.bytes;\n\n      for (let j = 0; j < byteLength; j++) {\n        if (recordBytes[j] !== bytes[inputOffset + j]) {\n          continue FIND_CHUNK;\n        }\n      }\n      return record.str;\n    }\n    return null;\n  }\n\n  private store(bytes: Uint8Array, value: string) {\n    const records = this.caches[bytes.length - 1]!;\n    const record: KeyCacheRecord = { bytes, str: value };\n\n    if (records.length >= this.maxLengthPerKey) {\n      // `records` are full!\n      // Set `record` to an arbitrary position.\n      records[(Math.random() * records.length) | 0] = record;\n    } else {\n      records.push(record);\n    }\n  }\n\n  public decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n    const cachedValue = this.find(bytes, inputOffset, byteLength);\n    if (cachedValue != null) {\n      this.hit++;\n      return cachedValue;\n    }\n    this.miss++;\n\n    const str = utf8DecodeJs(bytes, inputOffset, byteLength);\n    // Ensure to copy a slice of bytes because the bytes may be a NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n    const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n    this.store(slicedCopyOfBytes, str);\n    return str;\n  }\n}\n", "import { prettyByte } from \"./utils/prettyByte.ts\";\nimport { ExtensionCodec } from \"./ExtensionCodec.ts\";\nimport { getInt64, getUint64, UINT32_MAX } from \"./utils/int.ts\";\nimport { utf8Decode } from \"./utils/utf8.ts\";\nimport { ensureUint8Array } from \"./utils/typedArrays.ts\";\nimport { CachedKeyDecoder } from \"./CachedKeyDecoder.ts\";\nimport { DecodeError } from \"./DecodeError.ts\";\nimport type { ContextOf } from \"./context.ts\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec.ts\";\nimport type { KeyDecoder } from \"./CachedKeyDecoder.ts\";\n\nexport type DecoderOptions<ContextType = undefined> = Readonly<\n  Partial<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Decodes Int64 and Uint64 as bigint if it's set to true.\n     * Depends on ES2020's {@link DataView#getBigInt64} and\n     * {@link DataView#getBigUint64}.\n     *\n     * Defaults to false.\n     */\n    useBigInt64: boolean;\n\n    /**\n     * By default, string values will be decoded as UTF-8 strings. However, if this option is true,\n     * string values will be returned as Uint8Arrays without additional decoding.\n     *\n     * This is useful if the strings may contain invalid UTF-8 sequences.\n     *\n     * Note that this option only applies to string values, not map keys. Additionally, when\n     * enabled, raw string length is limited by the maxBinLength option.\n     */\n    rawStrings: boolean;\n\n    /**\n     * Maximum string length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxStrLength: number;\n    /**\n     * Maximum binary length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxBinLength: number;\n    /**\n     * Maximum array length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxArrayLength: number;\n    /**\n     * Maximum map length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxMapLength: number;\n    /**\n     * Maximum extension length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxExtLength: number;\n\n    /**\n     * An object key decoder. Defaults to the shared instance of {@link CachedKeyDecoder}.\n     * `null` is a special value to disable the use of the key decoder at all.\n     */\n    keyDecoder: KeyDecoder | null;\n\n    /**\n     * A function to convert decoded map key to a valid JS key type.\n     *\n     * Defaults to a function that throws an error if the key is not a string or a number.\n     */\n    mapKeyConverter: (key: unknown) => MapKeyType;\n  }>\n> &\n  ContextOf<ContextType>;\n\nconst STATE_ARRAY = \"array\";\nconst STATE_MAP_KEY = \"map_key\";\nconst STATE_MAP_VALUE = \"map_value\";\n\ntype MapKeyType = string | number;\n\nconst mapKeyConverter = (key: unknown): MapKeyType => {\n  if (typeof key === \"string\" || typeof key === \"number\") {\n    return key;\n  }\n  throw new DecodeError(\"The type of key must be string or number but \" + typeof key);\n};\n\ntype StackMapState = {\n  type: typeof STATE_MAP_KEY | typeof STATE_MAP_VALUE;\n  size: number;\n  key: MapKeyType | null;\n  readCount: number;\n  map: Record<string, unknown>;\n};\n\ntype StackArrayState = {\n  type: typeof STATE_ARRAY;\n  size: number;\n  array: Array<unknown>;\n  position: number;\n};\n\nclass StackPool {\n  private readonly stack: Array<StackState> = [];\n  private stackHeadPosition = -1;\n\n  public get length(): number {\n    return this.stackHeadPosition + 1;\n  }\n\n  public top(): StackState | undefined {\n    return this.stack[this.stackHeadPosition];\n  }\n\n  public pushArrayState(size: number) {\n    const state = this.getUninitializedStateFromPool() as StackArrayState;\n\n    state.type = STATE_ARRAY;\n    state.position = 0;\n    state.size = size;\n    state.array = new Array(size);\n  }\n\n  public pushMapState(size: number) {\n    const state = this.getUninitializedStateFromPool() as StackMapState;\n\n    state.type = STATE_MAP_KEY;\n    state.readCount = 0;\n    state.size = size;\n    state.map = {};\n  }\n\n  private getUninitializedStateFromPool() {\n    this.stackHeadPosition++;\n\n    if (this.stackHeadPosition === this.stack.length) {\n      const partialState: Partial<StackState> = {\n        type: undefined,\n        size: 0,\n        array: undefined,\n        position: 0,\n        readCount: 0,\n        map: undefined,\n        key: null,\n      };\n\n      this.stack.push(partialState as StackState);\n    }\n\n    return this.stack[this.stackHeadPosition];\n  }\n\n  public release(state: StackState): void {\n    const topStackState = this.stack[this.stackHeadPosition];\n\n    if (topStackState !== state) {\n      throw new Error(\"Invalid stack state. Released state is not on top of the stack.\");\n    }\n\n    if (state.type === STATE_ARRAY) {\n      const partialState = state as Partial<StackArrayState>;\n      partialState.size = 0;\n      partialState.array = undefined;\n      partialState.position = 0;\n      partialState.type = undefined;\n    }\n\n    if (state.type === STATE_MAP_KEY || state.type === STATE_MAP_VALUE) {\n      const partialState = state as Partial<StackMapState>;\n      partialState.size = 0;\n      partialState.map = undefined;\n      partialState.readCount = 0;\n      partialState.type = undefined;\n    }\n\n    this.stackHeadPosition--;\n  }\n\n  public reset(): void {\n    this.stack.length = 0;\n    this.stackHeadPosition = -1;\n  }\n}\n\ntype StackState = StackArrayState | StackMapState;\n\nconst HEAD_BYTE_REQUIRED = -1;\n\nconst EMPTY_VIEW = new DataView<ArrayBufferLike>(new ArrayBuffer(0));\nconst EMPTY_BYTES = new Uint8Array<ArrayBufferLike>(EMPTY_VIEW.buffer);\n\ntry {\n  // IE11: The spec says it should throw RangeError,\n  // IE11: but in IE11 it throws TypeError.\n  EMPTY_VIEW.getInt8(0);\n} catch (e) {\n  if (!(e instanceof RangeError)) {\n    throw new Error(\n      \"This module is not supported in the current JavaScript engine because DataView does not throw RangeError on out-of-bounds access\",\n    );\n  }\n}\n\nconst MORE_DATA = new RangeError(\"Insufficient data\");\n\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\n\nexport class Decoder<ContextType = undefined> {\n  private readonly extensionCodec: ExtensionCodecType<ContextType>;\n  private readonly context: ContextType;\n  private readonly useBigInt64: boolean;\n  private readonly rawStrings: boolean;\n  private readonly maxStrLength: number;\n  private readonly maxBinLength: number;\n  private readonly maxArrayLength: number;\n  private readonly maxMapLength: number;\n  private readonly maxExtLength: number;\n  private readonly keyDecoder: KeyDecoder | null;\n  private readonly mapKeyConverter: (key: unknown) => MapKeyType;\n\n  private totalPos = 0;\n  private pos = 0;\n\n  private view = EMPTY_VIEW;\n  private bytes = EMPTY_BYTES;\n  private headByte = HEAD_BYTE_REQUIRED;\n  private readonly stack = new StackPool();\n\n  private entered = false;\n\n  public constructor(options?: DecoderOptions<ContextType>) {\n    this.extensionCodec = options?.extensionCodec ?? (ExtensionCodec.defaultCodec as ExtensionCodecType<ContextType>);\n    this.context = (options as { context: ContextType } | undefined)?.context as ContextType; // needs a type assertion because EncoderOptions has no context property when ContextType is undefined\n\n    this.useBigInt64 = options?.useBigInt64 ?? false;\n    this.rawStrings = options?.rawStrings ?? false;\n    this.maxStrLength = options?.maxStrLength ?? UINT32_MAX;\n    this.maxBinLength = options?.maxBinLength ?? UINT32_MAX;\n    this.maxArrayLength = options?.maxArrayLength ?? UINT32_MAX;\n    this.maxMapLength = options?.maxMapLength ?? UINT32_MAX;\n    this.maxExtLength = options?.maxExtLength ?? UINT32_MAX;\n    this.keyDecoder = options?.keyDecoder !== undefined ? options.keyDecoder : sharedCachedKeyDecoder;\n    this.mapKeyConverter = options?.mapKeyConverter ?? mapKeyConverter;\n  }\n\n  private clone(): Decoder<ContextType> {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return new Decoder({\n      extensionCodec: this.extensionCodec,\n      context: this.context,\n      useBigInt64: this.useBigInt64,\n      rawStrings: this.rawStrings,\n      maxStrLength: this.maxStrLength,\n      maxBinLength: this.maxBinLength,\n      maxArrayLength: this.maxArrayLength,\n      maxMapLength: this.maxMapLength,\n      maxExtLength: this.maxExtLength,\n      keyDecoder: this.keyDecoder,\n    } as any);\n  }\n\n  private reinitializeState() {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n    this.stack.reset();\n\n    // view, bytes, and pos will be re-initialized in setBuffer()\n  }\n\n  private setBuffer(buffer: ArrayLike<number> | ArrayBufferView | ArrayBufferLike): void {\n    const bytes = ensureUint8Array(buffer);\n    this.bytes = bytes;\n    this.view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    this.pos = 0;\n  }\n\n  private appendBuffer(buffer: ArrayLike<number> | ArrayBufferView | ArrayBufferLike): void {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {\n      this.setBuffer(buffer);\n    } else {\n      const remainingData = this.bytes.subarray(this.pos);\n      const newData = ensureUint8Array(buffer);\n\n      // concat remainingData + newData\n      const newBuffer = new Uint8Array(remainingData.length + newData.length);\n      newBuffer.set(remainingData);\n      newBuffer.set(newData, remainingData.length);\n      this.setBuffer(newBuffer);\n    }\n  }\n\n  private hasRemaining(size: number) {\n    return this.view.byteLength - this.pos >= size;\n  }\n\n  private createExtraByteError(posToShow: number): Error {\n    const { view, pos } = this;\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\n  }\n\n  /**\n   * @throws {@link DecodeError}\n   * @throws {@link RangeError}\n   */\n  public decode(buffer: ArrayLike<number> | ArrayBufferView | ArrayBufferLike): unknown {\n    if (this.entered) {\n      const instance = this.clone();\n      return instance.decode(buffer);\n    }\n\n    try {\n      this.entered = true;\n\n      this.reinitializeState();\n      this.setBuffer(buffer);\n\n      const object = this.doDecodeSync();\n      if (this.hasRemaining(1)) {\n        throw this.createExtraByteError(this.pos);\n      }\n      return object;\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  public *decodeMulti(buffer: ArrayLike<number> | ArrayBufferView | ArrayBufferLike): Generator<unknown, void, unknown> {\n    if (this.entered) {\n      const instance = this.clone();\n      yield* instance.decodeMulti(buffer);\n      return;\n    }\n\n    try {\n      this.entered = true;\n\n      this.reinitializeState();\n      this.setBuffer(buffer);\n\n      while (this.hasRemaining(1)) {\n        yield this.doDecodeSync();\n      }\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number> | ArrayBufferView | ArrayBufferLike>): Promise<unknown> {\n    if (this.entered) {\n      const instance = this.clone();\n      return instance.decodeAsync(stream);\n    }\n\n    try {\n      this.entered = true;\n\n      let decoded = false;\n      let object: unknown;\n      for await (const buffer of stream) {\n        if (decoded) {\n          this.entered = false;\n          throw this.createExtraByteError(this.totalPos);\n        }\n\n        this.appendBuffer(buffer);\n\n        try {\n          object = this.doDecodeSync();\n          decoded = true;\n        } catch (e) {\n          if (!(e instanceof RangeError)) {\n            throw e; // rethrow\n          }\n          // fallthrough\n        }\n        this.totalPos += this.pos;\n      }\n\n      if (decoded) {\n        if (this.hasRemaining(1)) {\n          throw this.createExtraByteError(this.totalPos);\n        }\n        return object;\n      }\n\n      const { headByte, pos, totalPos } = this;\n      throw new RangeError(\n        `Insufficient data in parsing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\n      );\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  public decodeArrayStream(\n    stream: AsyncIterable<ArrayLike<number> | ArrayBufferView | ArrayBufferLike>,\n  ): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, true);\n  }\n\n  public decodeStream(stream: AsyncIterable<ArrayLike<number> | ArrayBufferView | ArrayBufferLike>): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, false);\n  }\n\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number> | ArrayBufferView | ArrayBufferLike>, isArray: boolean): AsyncGenerator<unknown, void, unknown> {\n    if (this.entered) {\n      const instance = this.clone();\n      yield* instance.decodeMultiAsync(stream, isArray);\n      return;\n    }\n\n    try {\n      this.entered = true;\n\n      let isArrayHeaderRequired = isArray;\n      let arrayItemsLeft = -1;\n\n      for await (const buffer of stream) {\n        if (isArray && arrayItemsLeft === 0) {\n          throw this.createExtraByteError(this.totalPos);\n        }\n\n        this.appendBuffer(buffer);\n\n        if (isArrayHeaderRequired) {\n          arrayItemsLeft = this.readArraySize();\n          isArrayHeaderRequired = false;\n          this.complete();\n        }\n\n        try {\n          while (true) {\n            yield this.doDecodeSync();\n            if (--arrayItemsLeft === 0) {\n              break;\n            }\n          }\n        } catch (e) {\n          if (!(e instanceof RangeError)) {\n            throw e; // rethrow\n          }\n          // fallthrough\n        }\n        this.totalPos += this.pos;\n      }\n    } finally {\n      this.entered = false;\n    }\n  }\n\n  private doDecodeSync(): unknown {\n    DECODE: while (true) {\n      const headByte = this.readHeadByte();\n      let object: unknown;\n\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          const size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          const size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          const byteLength = headByte - 0xa0;\n          object = this.decodeString(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        if (this.useBigInt64) {\n          object = this.readU64AsBigInt();\n        } else {\n          object = this.readU64();\n        }\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        if (this.useBigInt64) {\n          object = this.readI64AsBigInt();\n        } else {\n          object = this.readI64();\n        }\n      } else if (headByte === 0xd9) {\n        // str 8\n        const byteLength = this.lookU8();\n        object = this.decodeString(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        const byteLength = this.lookU16();\n        object = this.decodeString(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        const byteLength = this.lookU32();\n        object = this.decodeString(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        const size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        const size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        const size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        const size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        const size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        const size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new DecodeError(`Unrecognized type byte: ${prettyByte(headByte)}`);\n      }\n\n      this.complete();\n\n      const stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        const state = stack.top()!;\n        if (state.type === STATE_ARRAY) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            object = state.array;\n            stack.release(state);\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === STATE_MAP_KEY) {\n          if (object === \"__proto__\") {\n            throw new DecodeError(\"The key __proto__ is not allowed\");\n          }\n\n          state.key = this.mapKeyConverter(object);\n          state.type = STATE_MAP_VALUE;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n\n          state.map[state.key!] = object;\n          state.readCount++;\n\n          if (state.readCount === state.size) {\n            object = state.map;\n            stack.release(state);\n          } else {\n            state.key = null;\n            state.type = STATE_MAP_KEY;\n            continue DECODE;\n          }\n        }\n      }\n\n      return object;\n    }\n  }\n\n  private readHeadByte(): number {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  }\n\n  private complete(): void {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private readArraySize(): number {\n    const headByte = this.readHeadByte();\n\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default: {\n        if (headByte < 0xa0) {\n          return headByte - 0x90;\n        } else {\n          throw new DecodeError(`Unrecognized array type byte: ${prettyByte(headByte)}`);\n        }\n      }\n    }\n  }\n\n  private pushMapState(size: number) {\n    if (size > this.maxMapLength) {\n      throw new DecodeError(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\n    }\n\n    this.stack.pushMapState(size);\n  }\n\n  private pushArrayState(size: number) {\n    if (size > this.maxArrayLength) {\n      throw new DecodeError(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\n    }\n\n    this.stack.pushArrayState(size);\n  }\n\n  private decodeString(byteLength: number, headerOffset: number): string | Uint8Array {\n    if (!this.rawStrings || this.stateIsMapKey()) {\n      return this.decodeUtf8String(byteLength, headerOffset);\n    }\n    return this.decodeBinary(byteLength, headerOffset);\n  }\n\n  /**\n   * @throws {@link RangeError}\n   */\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\n    if (byteLength > this.maxStrLength) {\n      throw new DecodeError(\n        `Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`,\n      );\n    }\n\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headerOffset;\n    let object: string;\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else {\n      object = utf8Decode(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  }\n\n  private stateIsMapKey(): boolean {\n    if (this.stack.length > 0) {\n      const state = this.stack.top()!;\n      return state.type === STATE_MAP_KEY;\n    }\n    return false;\n  }\n\n  /**\n   * @throws {@link RangeError}\n   */\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\n    if (byteLength > this.maxBinLength) {\n      throw new DecodeError(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\n    }\n\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headOffset;\n    const object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  }\n\n  private decodeExtension(size: number, headOffset: number): unknown {\n    if (size > this.maxExtLength) {\n      throw new DecodeError(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\n    }\n\n    const extType = this.view.getInt8(this.pos + headOffset);\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  }\n\n  private lookU8() {\n    return this.view.getUint8(this.pos);\n  }\n\n  private lookU16() {\n    return this.view.getUint16(this.pos);\n  }\n\n  private lookU32() {\n    return this.view.getUint32(this.pos);\n  }\n\n  private readU8(): number {\n    const value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readI8(): number {\n    const value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readU16(): number {\n    const value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readI16(): number {\n    const value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readU32(): number {\n    const value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readI32(): number {\n    const value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readU64(): number {\n    const value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64(): number {\n    const value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readU64AsBigInt(): bigint {\n    const value = this.view.getBigUint64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64AsBigInt(): bigint {\n    const value = this.view.getBigInt64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readF32() {\n    const value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readF64() {\n    const value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n}\n", "import { Decoder } from \"./Decoder.ts\";\nimport type { DecoderOptions } from \"./Decoder.ts\";\nimport type { SplitUndefined } from \"./context.ts\";\n\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync}, {@link decodeMultiStream}, or {@link decodeArrayStream}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decode<ContextType = undefined>(\n  buffer: ArrayLike<number> | ArrayBufferView | ArrayBufferLike,\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\n): unknown {\n  const decoder = new Decoder(options);\n  return decoder.decode(buffer);\n}\n\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMulti<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\n): Generator<unknown, void, unknown> {\n  const decoder = new Decoder(options);\n  return decoder.decodeMulti(buffer);\n}\n", "export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}", "import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}", "import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8Array(output);\n}", "import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}", null, null, null, null, null, null, null],
  "mappings": "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AA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAGD,QAAMP,KAAI,IAAI,YAAY,EAAE;AAC5B,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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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",
  "names": ["toHex", "n", "size", "i", "N", "M", "ms", "v", "a", "b", "i", "c", "d", "m", "x", "v", "i", "a", "b", "c", "d", "x", "y", "m", "ConstantsUtil", "w", "a", "ua", "ConstantsUtil", "c", "r", "v", "a", "b", "baseUrl", "x", "entries", "x", "ConstantsUtil", "ConstantsUtil", "state", "controller", "state", "state", "state", "controller", "api", "state", "baseUrl", "api", "state", "w", "a", "b", "d", "r", "NetworkUtil", "c", "state", "state", "controller", "NetworkUtil", "state", "controller", "state", "controller", "state", "controller", "c", "uc", "ConstantsUtil", "ConstantsUtil", "c", "DEFAULT_STATE", "state", "controller", "state", "controller", "a", "b", "state", "controller", "a", "namespace", "accountType", "c", "state", "controller", "ConstantsUtil", "to", "state", "controller", "a", "n", "ConstantsUtil", "ns", "baseUrl", "state", "from", "to", "ConstantsUtil", "state", "controller", "accountState", "ConstantsUtil", "state", "controller", "ConstantsUtil", "state", "controller", "p", "state", "controller", "state", "controller", "state", "secp256k1", "r", "v", "yParityOrV", "recoveryBit", "A", "B", "C", "D", "E", "i", "F", "K", "T", "L", "R", "j", "k", "x", "y", "z", "h2", "h3", "ar", "br", "cr", "dr", "er", "rr", "sr", "tr", "keccak256", "as", "LruMap", "size", "LruMap", "InvalidAddressError", "checksum", "keccak256", "i", "InvalidAddressError", "arrayRegex", "bytesRegex", "integerRegex", "maxUint256", "PositionOutOfBoundsError", "size", "PositionOutOfBoundsError", "encodePacked", "i", "encode", "fromString", "integerRegex", "size", "bytesRegex", "BytesSizeMismatchError", "arrayRegex", "BytesSizeMismatchError", "size", "encode", "decode", "i", "size", "encode", "i", "j", "size", "state", "decode", "size", "concat", "encode", "decode", "string", "i", "fromString", "string", "toString", "result", "string", "i", "r", "b", "create"]
}
